{"version":3,"sources":["portfolio.js","jpi/plugins/templating.js","jpi/plugins/ajax.js","jpi/plugins/modal.js","jpi/plugins/slide-show.js","jpi/plugins/expanded-slide-show.js","jpi/api.js","jpi/components/projects.js"],"names":["JPI","templating","this","moustaches","getMoustache","field","RegExp","bind","Template","template","context","replace","value","type","moustache","innerField","hasOwnProperty","call","process","data","get","renderIn","parentElem","append","ajax","checkAndRenderError","response","errorRenderer","genericMessage","message","error","renderRowsOrError","rowRenderer","length","i","request","jQuery","url","method","toUpperCase","dataType","success","onSuccess","onError","modal","$modal","$body","$page","lastFocused","$focusables","$firstFocusable","$lastFocusable","close","hasClass","removeClass","attr","tabindex","aria-hidden","hidden","focus","trigger","triggerClose","$closeButton","find","onModalClick","e","$clickedElem","target","children","closest","onBackwardTab","document","activeElement","preventDefault","onForwardTab","onKeyDown","keyCode","key","shiftKey","open","addClass","getFocusableChildren","focusablesLength","on","SlideShow","options","slideShow","getXPosition","changedTouches","clientX","removeSelector","selector","substring","extend","viewportSelector","slidesContainerSelector","slideSelector","bulletsSelector","bulletSelector","navSelector","slidesPerView","durationPerSlide","autoplay","loop","activeSlideClass","activeBulletClass","$slideShow","$viewport","$container","$slides","$bulletsContainer","$bullets","$navs","interval","getConfig","config","window","innerWidth","getInt","breakpoints","desktop","tablet","resetTransition","css","widenSlideShow","slideWidth","count","fullWidth","offset","first","getPosition","$slide","is","position","left","resetToCurrentSlide","$activeSlide","transitionDuration","repositionSlides","setupNav","$currentSlide","filter","moveToSlide","$nextSlide","newSlideID","move","direction","$oldSlide","prev","last","next","onSlideDrag","startEvent","container","slidesContainerLeft","startX","removeListeners","removeEventListener","dragMove","dragEnd","dragCancel","resume","endX","diff","Math","abs","pause","addEventListener","clearInterval","stop","setInterval","changeToSlide","clickedSlideId","navigate","start","off","debounce","$firstSlide","$inactiveSlides","hide","not","show","ExpandedSlideShow","$element","$currentCount","$nav","timeout","current","displaySlide","$expandedImage","src","text","changeSlide","newSlideIndex","$expandedImageNew","$expandedImageOld","previous","onNavClick","onBulletClick","slideId","onClose","setTimeout","onCloseClick","stopPropagation","slide","groupSelector","clearTimeout","parents","slidesCount","renderNewElement","class","data-slide-id","api","dateFormat","Intl","DateTimeFormat","month","year","formatProjectData","project","date","Date","format","projects","URL","location","$projectType","$loading","$paginationStatus","$error","$projects","$pagination","modalSelector","$modalSlidesContainer","modalSlideShow","page","val","projectTemplate","slideTemplate","bulletTemplate","renderError","renderPaginationItem","isCurrent","classes","searchParams","set","delete","$link","push","createElement","join","href","toString","html","renderPagination","totalProjects","perPage","currentPage","totalPages","ceil","renderProjectTags","containerSelector","$tags","tags","tag","trim","renderProjectLinks","defaultAttributes","$links","download_url","github_url","rel","title","name","remove","renderProjectImages","images","$slidesContainer","$slideShowBullets","image","renderProject","projectSelector","id","gotProjects","_total_count","paginationStatus","getProjects","query","filters","limit","type_id","apiEndpoint","openProjectModal","projectId","long_description","onProjectModalClose","width","storeLatestSearch","state","history","pushState","ga","scrollToProjects","scrollTo","initListeners","init","apiResponse"],"mappings":"AAAA,IAAAA,IAAAA,KAAA,GCCAA,IAAAC,WAAA,IAAA,WAcA,OAXAC,KAAAC,WAAA,GAGAD,KAAAE,aAAA,SAAAC,GAKA,OAJAH,KAAAC,WAAAE,KACAH,KAAAC,WAAAE,GAAA,IAAAC,OAAA,SAAAD,EAAA,SAAA,GAAA,GAGAH,KAAAC,WAAAE,EACA,EAEA,CACAD,aAAAF,KAAAE,aAAAG,KAAAL,IAAA,CACA,CACA,EAGAF,IAAAQ,SAGA,SAAAC,EAAAC,GACAR,KAAAQ,QAAAA,GAAA,GAEAR,KAAAS,QAAA,SAAAN,EAAAO,GACA,IAAAC,EAAA,OAAAD,EAEA,GAAA,UAAAC,GAAA,UAAAA,EAAA,CACA,IAAAC,EAAAd,IAAAC,WAAAG,aAAAC,CAAA,EACAI,EAAAA,EAAAE,QAAAG,EAAAF,CAAA,CACA,MACA,GAAA,UAAAC,EACA,IAAA,IAAAE,KAAAH,EACA,CAAA,GAAAI,eAAAC,KAAAL,EAAAG,CAAA,IAEAN,EAAAP,KAAAS,QADAN,EAAAA,EAAA,IAAAU,EAAAA,EACAH,EAAAG,EAAA,GAKA,OAAAN,CACA,EAEAP,KAAAgB,QAAA,SAAAC,GACAA,GACAjB,KAAAS,QAAA,KAAAQ,CAAA,CAEA,EAEAjB,KAAAkB,IAAA,WAEA,OADAlB,KAAAgB,QAAAR,CAAA,EACAD,CACA,EAEAP,KAAAmB,SAAA,SAAAC,GACAA,EAAAC,OAAArB,KAAAkB,IAAA,CAAA,CACA,CACA,EC5DApB,IAAAwB,KAAA,IAAA,WA+DA,OA3DAtB,KAAAuB,oBAAA,SAAAC,EAAAC,EAAAC,GACAC,EAAAD,GAAA,GACAF,IACAA,EAAAI,MACAD,EAAAH,EAAAI,MAEAJ,EAAAG,UACAA,EAAAH,EAAAG,UAIAA,GACAF,EAAAE,CAAA,CAEA,EAGA3B,KAAA6B,kBAAA,SAAAL,EAAAM,EAAAL,EAAAC,GAEA,GAAAF,GAAAA,EAAAP,MAAAO,EAAAP,KAAAc,OAAA,CACA,IAAA,IAAAC,EAAA,EAAAA,EAAAR,EAAAP,KAAAc,OAAAC,CAAA,GACA,CAAA,GAAAlB,eAAAC,KAAAS,EAAAP,KAAAe,CAAA,GACAF,EAAAN,EAAAP,KAAAe,EAAA,EAIA,MAAA,CAAA,CACA,CAIA,OADAhC,KAAAuB,oBAAAC,EAAAC,EAAAC,CAAA,EACA,CAAA,CACA,EAcA1B,KAAAiC,QAAA,SAAAA,GACA,OAAAC,OAAAZ,KAAA,CACAa,IAAAF,EAAAE,IACAC,OAAAH,EAAAG,OAAAC,YAAA,EACApB,KAAAgB,EAAAhB,KACAqB,SAAA,OACAC,QAAAN,EAAAO,UACAZ,MAAA,WACAK,EAAAQ,QAAA,wBAAA,CACA,CACA,CAAA,CACA,EAEA,CACAZ,kBAAA7B,KAAA6B,kBAAAxB,KAAAL,IAAA,EACAiC,QAAAjC,KAAAiC,QAAA5B,KAAAL,IAAA,CACA,CACA,ECnEAF,IAAA4C,MAAA,SAAAC,GAyHA,OAtHA3C,KAAA4C,MAAAV,OAAA,MAAA,EACAlC,KAAA6C,MAAAX,OAAA,iBAAA,EAEAlC,KAAA8C,YAAA,KAEA9C,KAAA+C,YAAA,KACA/C,KAAAgD,gBAAA,KACAhD,KAAAiD,eAAA,KAEAjD,KAAAkD,MAAA,WACAP,EAAAQ,SAAA,SAAA,IAIAnD,KAAA4C,MAAAQ,YAAA,WAAA,EACApD,KAAA6C,MAAAQ,KAAA,cAAA,OAAA,EAEAV,EAAAS,YAAA,SAAA,EACAT,EAAAU,KAAA,CACAC,SAAA,CAAA,EACAC,cAAA,CAAA,EACAC,OAAA,QACA,CAAA,EAEAxD,KAAA8C,aACA9C,KAAA8C,YAAAW,MAAA,EAGAd,EAAAe,QAAA,QAAA,EACA,EAEA1D,KAAA2D,aAAA,WACA,IAAAC,EAAAjB,EAAAkB,KAAA,iBAAA,EACAD,EAAA7B,OACA6B,EAAAF,QAAA,OAAA,EAIA1D,KAAAkD,MAAA,CACA,EAEAlD,KAAA8D,aAAA,SAAAC,GAEAC,EAAA9B,OAAA6B,EAAAE,MAAA,EACAD,EAAAE,SAAA,iBAAA,EAAAnC,QAAA,CAAAiC,EAAAG,QAAA,iBAAA,EAAApC,QACA/B,KAAA2D,aAAA,CAEA,EAEA3D,KAAAoE,cAAA,SAAAL,GACAM,SAAAC,gBAAAtE,KAAAgD,gBAAA,KACAe,EAAAQ,eAAA,EACAvE,KAAAiD,eAAAQ,MAAA,EAEA,EAEAzD,KAAAwE,aAAA,SAAAT,GACAM,SAAAC,gBAAAtE,KAAAiD,eAAA,KACAc,EAAAQ,eAAA,EACAvE,KAAAgD,gBAAAS,MAAA,EAEA,EAEAzD,KAAAyE,UAAA,SAAAV,GACA,OAAAA,EAAAW,SAAAX,EAAAY,KACA,KAAA,EACA,IAAA,MACA3E,KAAA+C,YAAAhB,QAAA,EACAgC,EAAAQ,eAAA,EAIAR,EAAAa,SACA5E,KAAAoE,cAAAL,CAAA,EAGA/D,KAAAwE,aAAAT,CAAA,EAEA,MACA,KAAA,GACA,IAAA,SACA/D,KAAA2D,aAAA,CAEA,CACA,EAEA3D,KAAA6E,KAAA,WACA7E,KAAA8C,YAAAuB,SAAAC,cAEAtE,KAAA4C,MAAAkC,SAAA,WAAA,EACA9E,KAAA6C,MAAAQ,KAAA,cAAA,MAAA,EAEAV,EAAAU,KAAA,CACAC,SAAA,EACAC,cAAA,CAAA,EACAC,OAAA,CAAA,CACA,CAAA,EACAb,EAAAmC,SAAA,SAAA,EAEA9E,KAAA+C,YAAAjD,IAAAiF,qBAAApC,CAAA,EACA,IAAAqC,EAAAhF,KAAA+C,YAAAhB,QACAiD,GACAhF,KAAAgD,gBAAAd,OAAAlC,KAAA+C,YAAA,EAAA,EACA/C,KAAAiD,eAAAf,OAAAlC,KAAA+C,YAAAiC,EAAA,EAAA,EAEAhF,KAAAgD,iBAGAL,GAHAc,MAAA,EAMAd,EAAAe,QAAA,QAAA,EAEAf,EAAAsC,GAAA,QAAAjF,KAAA8D,aAAAzD,KAAAL,IAAA,CAAA,EACA2C,EAAAsC,GAAA,QAAA,kBAAAjF,KAAAkD,MAAA7C,KAAAL,IAAA,CAAA,EACA2C,EAAAsC,GAAA,UAAAjF,KAAAyE,UAAApE,KAAAL,IAAA,CAAA,CACA,EAEA,CACA6E,KAAA7E,KAAA6E,KAAAxE,KAAAL,IAAA,EACAkD,MAAAlD,KAAAkD,MAAA7C,KAAAL,IAAA,CACA,CACA,EC1HAF,IAAAoF,UAAA,SAAAC,GAGA,IAAAC,EAAApF,KA2WA,OAvVAA,KAAAqF,aAAA,SAAAtB,GACA,OAAAA,EAAAuB,eAAAvB,EAAAuB,eAAA,GAAAvB,GAAAwB,OACA,EAEAvF,KAAAwF,eAAA,SAAAC,GACA,OAAAA,EAAAC,UAAA,CAAA,CACA,EAEA1F,KAAAmF,QAAAjD,OAAAyD,OA1BA,CACAF,SAAA,cACAG,iBAAA,wBACAC,wBAAA,sBACAC,cAAA,qBACAC,gBAAA,uBACAC,eAAA,sBACAC,YAAA,mBAEAC,cAAA,EAEAC,iBAAA,IAEAC,SAAA,CAAA,EAEAC,KAAA,CAAA,CACA,EAUAlB,GAAA,EAAA,EAEAnF,KAAAmF,QAAAmB,iBAAAtG,KAAAwF,eAAAxF,KAAAmF,QAAAW,aAAA,EAAA,WACA9F,KAAAmF,QAAAa,iBACAhG,KAAAmF,QAAAoB,kBAAAvG,KAAAwF,eAAAxF,KAAAmF,QAAAa,cAAA,EAAA,YAGAhG,KAAAwG,WACAxG,KAAAyG,UACAzG,KAAA0G,WACA1G,KAAA2G,QACA3G,KAAA4G,kBACA5G,KAAA6G,SACA7G,KAAA8G,MAEA9G,KAAA+G,SAEA/G,KAAAgH,UAAA,SAAAC,GACA,OAAAC,OAAAC,YAAArH,IAAAsH,OAAAtH,IAAAuH,YAAAC,OAAA,GAEAtH,KAAAmF,QAAAkC,aACArH,KAAAmF,QAAAkC,YAAAC,SACAtH,KAAAmF,QAAAkC,YAAAC,QAAAL,GAEAjH,KAAAmF,QAAAkC,YAAAC,QAIAJ,OAAAC,YAAArH,IAAAsH,OAAAtH,IAAAuH,YAAAE,MAAA,GAEAvH,KAAAmF,QAAAkC,aACArH,KAAAmF,QAAAkC,YAAAE,QACAvH,KAAAmF,QAAAkC,YAAAE,OAAAN,GAEAjH,KAAAmF,QAAAkC,YAAAE,OAIAvH,KAAAmF,SAdA8B,EAeA,EAGAjH,KAAAwH,gBAAA,WACAxH,KAAA0G,WAAAe,IAAA,sBAAA,EAAA,CACA,EAGAzH,KAAA0H,eAAA,WACA,IAAAC,EAAA3H,KAAAyG,UAAAU,WAAA,EACAS,EAAA5H,KAAA2G,QAAA5E,OAEA8F,EAAAF,EAAAC,EAEA1B,EAAAlG,KAAAgH,UAAA,eAAA,EACA,EAAAd,IACAyB,GAAAzB,EAIA4B,EAFA5B,EAAA,GAAA,GACA2B,EAAAF,EAAAC,EAAAD,EAAA,EACAA,EAAA,IAGAE,EAAAF,EAAAC,EAAAD,EACAA,GAGA3H,KAAA2G,QAAAoB,MAAA,EAAAN,IAAA,cAAAK,CAAA,GAGA9H,KAAA2G,QAAAc,IAAA,QAAAE,EAAA,IAAA,EACA3H,KAAA0G,WAAAe,IAAA,QAAAI,EAAA,IAAA,CACA,EAEA7H,KAAAgI,YAAA,SAAAC,GACA,IAAAH,EAAA,EAEA5B,EAAAlG,KAAAgH,UAAA,eAAA,EAWA,OAVA,EAAAd,GAAA,CAAA+B,EAAAC,GAAA,cAAA,IACAJ,EAAAG,EAAAd,WAAA,EAEAjB,EAAA,GAAA,KACA4B,GAAA,GAMA,KAFAG,EAAAE,SAAA,EAEAC,KAAAN,GAAA,IACA,EAGA9H,KAAAqI,oBAAA,WACA,IAAAC,EAAAtI,KAAAwG,WAAA3C,KAAA,IAAA7D,KAAAmF,QAAAmB,gBAAA,EACAtG,KAAA0G,WAAAe,IAAA,CACAc,mBAAA,KACAH,KAAApI,KAAAgI,YAAAM,CAAA,CACA,CAAA,EAEAtI,KAAAwH,gBAAA,CACA,EAGAxH,KAAAwI,iBAAA,WACAxI,KAAA0H,eAAA,EACA1H,KAAAqI,oBAAA,CACA,EAEArI,KAAAyI,SAAA,WACA,IACAC,EADA1I,KAAA8G,OAAA,CAAA9G,KAAAmF,QAAAkB,OACAqC,EAAA1I,KAAAwG,WAAA3C,KAAA,IAAA7D,KAAAmF,QAAAmB,gBAAA,EACAtG,KAAA8G,MAAA6B,OAAA,6BAAA,EAAAtF,KAAA,WAAAqF,EAAAR,GAAA,cAAA,CAAA,EACAlI,KAAA8G,MAAA6B,OAAA,yBAAA,EAAAtF,KAAA,WAAAqF,EAAAR,GAAA,aAAA,CAAA,EAEA,EAEAlI,KAAA4I,YAAA,SAAAC,GACA,IAYAC,EAZAJ,EAAA1I,KAAAwG,WAAA3C,KAAA,IAAA7D,KAAAmF,QAAAmB,gBAAA,EAEAoC,EAAAtF,YAAApD,KAAAmF,QAAAmB,gBAAA,EAEAtG,KAAA6G,UACA7G,KAAA6G,SAAA8B,OAAA,IAAA3I,KAAAmF,QAAAoB,iBAAA,EAAAnD,YAAApD,KAAAmF,QAAAoB,iBAAA,EAEAsC,EAAA/D,SAAA9E,KAAAmF,QAAAmB,gBAAA,EAEAtG,KAAA0G,WAAAe,IAAA,OAAAzH,KAAAgI,YAAAa,CAAA,CAAA,EAEA7I,KAAA6G,WACAiC,EAAAD,EAAAxF,KAAA,IAAA,EACArD,KAAA6G,SAAA8B,OAAA,oBAAAG,EAAA,IAAA,EAAAhE,SAAA9E,KAAAmF,QAAAoB,iBAAA,GAGAvG,KAAAyI,SAAA,EAEA3I,IAAAiF,qBAAA2D,CAAA,EAAArF,KAAA,WAAA,CAAA,CAAA,EACAvD,IAAAiF,qBAAA8D,CAAA,EAAAxF,KAAA,WAAA,EAAA,CACA,EAGArD,KAAA+I,KAAA,SAAAC,GACA,IAEAH,EAFAI,EAAAjJ,KAAAwG,WAAA3C,KAAA,IAAA7D,KAAAmF,QAAAmB,gBAAA,EAGA,aAAA0C,EAEA,EADAH,EAAAI,EAAAC,KAAA,GACAnH,QAAA/B,KAAAmF,QAAAkB,OACAwC,EAAA7I,KAAA2G,QAAAwC,KAAA,GAKA,EADAN,EAAAI,EAAAG,KAAA,GACArH,QAAA/B,KAAAmF,QAAAkB,OACAwC,EAAA7I,KAAA2G,QAAAoB,MAAA,GAIAc,EAAA9G,OACA/B,KAAA4I,YAAAC,CAAA,EAGA7I,KAAAqI,oBAAA,CAEA,EAGArI,KAAAqJ,YAAA,SAAAC,GACA,IAEAC,EAAAvJ,KAAA0G,WAAA,GACA8C,EAAAxJ,KAAA0G,WAAAyB,SAAA,EAAAC,KAEAqB,EAAAzJ,KAAAqF,aAAAiE,CAAA,EAEAI,EAAA,WACAH,EAAAI,oBAAA,YAAAC,CAAA,EACAL,EAAAI,oBAAA,YAAAC,CAAA,EACAL,EAAAI,oBAAA,WAAAE,CAAA,EACAN,EAAAI,oBAAA,UAAAE,CAAA,EACAN,EAAAI,oBAAA,aAAAE,CAAA,CACA,EACAC,EAAA,WACA1E,EAAAiD,oBAAA,EACAjD,EAAAD,QAAAiB,UACAhB,EAAA2E,OAAA,EAEAL,EAAA,CACA,EACAE,EAAA,SAAA7F,GACAiG,EAAA5E,EAAAC,aAAAtB,CAAA,EAGAqB,EAAAsB,WAAAe,IAAA,CACAc,mBAAA,KACAH,KAAAoB,GAJAC,EAAAO,GAIA,IACA,CAAA,CACA,EACAH,EAAA,SAAA9F,GACAiG,EAAA5E,EAAAC,aAAAtB,CAAA,EAEAkG,EAAAR,EAAAO,GACA,IAAAE,KAAAC,IAAAF,CAAA,GACA7E,EAAAoC,gBAAA,EACApC,EAAA2D,KAAAkB,EAAA,EAAA,WAAA,MAAA,EACA7E,EAAAD,QAAAiB,UACAhB,EAAA2E,OAAA,EAEAL,GAIAI,GAJA,CAKA,EAEA9J,KAAAoK,MAAA,EACAb,EAAAc,iBAAA,YAAAT,CAAA,EACAL,EAAAc,iBAAA,YAAAT,CAAA,EACAL,EAAAc,iBAAA,WAAAR,CAAA,EACAN,EAAAc,iBAAA,UAAAR,CAAA,EACAN,EAAAc,iBAAA,aAAAR,CAAA,CACA,EAGA7J,KAAAoK,MAAA,WACAE,cAAAtK,KAAA+G,QAAA,CACA,EAEA/G,KAAAuK,KAAA,WACA,IAAAhB,EAAAvJ,KAAA0G,WAAA,GACA6C,EAAAI,oBAAA,YAAA3J,KAAAqJ,WAAA,EACAE,EAAAI,oBAAA,aAAA3J,KAAAqJ,WAAA,EAEAiB,cAAAtK,KAAA+G,QAAA,CACA,EAGA/G,KAAA+J,OAAA,WACA/J,KAAA+G,SAAAyD,YAAA,WACApF,EAAA2D,KAAA,MAAA,CACA,EAAA/I,KAAAmF,QAAAgB,gBAAA,CACA,EAGAnG,KAAAyK,cAAA,SAAA1G,GAEA2G,EADAxI,OAAA6B,EAAAE,MAAA,EACAZ,KAAA,eAAA,EACAwF,EAAA7I,KAAAwG,WAAA3C,KAAA6G,CAAA,EAEA1K,KAAAoK,MAAA,EACApK,KAAA4I,YAAAC,CAAA,EAEA7I,KAAAmF,QAAAiB,UACApG,KAAA+J,OAAA,CAEA,EAEA/J,KAAA2K,SAAA,SAAA5G,GACA/D,KAAAoK,MAAA,EACApK,KAAA+I,KAAA7G,OAAA6B,EAAAE,MAAA,EAAAZ,KAAA,gBAAA,CAAA,EAEArD,KAAAmF,QAAAiB,UACApG,KAAA+J,OAAA,CAEA,EAEA/J,KAAA4K,MAAA,WACA5K,KAAA6G,UACA7G,KAAA6G,SAAAgE,IAAA,QAAA7K,KAAAyK,aAAA,EAEAzK,KAAA8G,OACA9G,KAAA8G,MAAA+D,IAAA,QAAA7K,KAAA2K,QAAA,EAGA3K,KAAAwG,WAAAtE,OAAAlC,KAAAmF,QAAAM,QAAA,EACAzF,KAAAyG,UAAAzG,KAAAwG,WAAA3C,KAAA7D,KAAAmF,QAAAS,gBAAA,EACA5F,KAAA0G,WAAA1G,KAAAwG,WAAA3C,KAAA7D,KAAAmF,QAAAU,uBAAA,EACA7F,KAAA2G,QAAA3G,KAAAwG,WAAA3C,KAAA7D,KAAAmF,QAAAW,aAAA,EAEA9F,KAAAmF,QAAAY,iBAAA/F,KAAAmF,QAAAa,iBACAhG,KAAA4G,kBAAA5G,KAAAwG,WAAA3C,KAAA7D,KAAAmF,QAAAY,eAAA,EACA/F,KAAA6G,SAAA7G,KAAAwG,WAAA3C,KAAA7D,KAAAmF,QAAAa,cAAA,EACAhG,KAAA6G,SAAA5B,GAAA,QAAAjF,KAAAyK,cAAApK,KAAAL,IAAA,CAAA,GAGAA,KAAA8G,MAAA9G,KAAAwG,WAAA3C,KAAA7D,KAAAmF,QAAAc,WAAA,EACAjG,KAAA8G,OACA9G,KAAA8G,MAAA7B,GAAA,QAAAjF,KAAA2K,SAAAtK,KAAAL,IAAA,CAAA,EAGAkC,OAAAgF,MAAA,EAAAjC,GAAA,2BAAAnF,IAAAgL,SAAA9K,KAAAwI,iBAAAnI,KAAAL,IAAA,EAAA,GAAA,CAAA,EAEA,IAaA+K,EAEAC,EAfApD,EAAA5H,KAAA2G,QAAA5E,OAEA6F,GAAA,GACA5H,KAAA4G,mBACA5G,KAAA4G,kBAAAqE,KAAA,EAEAjL,KAAA8G,OACA9G,KAAA8G,MAAAmE,KAAA,IAMAF,EAAA/K,KAAA2G,QAAAoB,MAAA,EAEAiD,EAAAhL,KAAA2G,QAAAuE,IAAAH,CAAA,EAEAjL,IAAAiF,qBAAAiG,CAAA,EAAA3H,KAAA,WAAA,CAAA,CAAA,EAEA0H,EAAAjG,SAAA9E,KAAAmF,QAAAmB,gBAAA,EAEAtG,KAAA6G,UACA7G,KAAA6G,SAAAkB,MAAA,EAAAjD,SAAA9E,KAAAmF,QAAAoB,iBAAA,EAGA,EAAAqB,IACA5H,KAAA0H,eAAA,EAEA1H,KAAA4G,mBACA5G,KAAA4G,kBAAAuE,KAAA,EAEAnL,KAAA8G,QACA9G,KAAA8G,MAAAqE,KAAA,EACAnL,KAAAyI,SAAA,GAGAzI,KAAA0G,WAAA,GAAA2D,iBAAA,YAAArK,KAAAqJ,YAAAhJ,KAAAL,IAAA,CAAA,EACAA,KAAA0G,WAAA,GAAA2D,iBAAA,aAAArK,KAAAqJ,YAAAhJ,KAAAL,IAAA,CAAA,EAEAA,KAAAmF,QAAAiB,WACApG,KAAA+J,OAAA,EAGA,EAEA,CACAa,MAAA5K,KAAA4K,MAAAvK,KAAAL,IAAA,EACAoK,MAAApK,KAAAoK,MAAA/J,KAAAL,IAAA,EACA+J,OAAA/J,KAAA+J,OAAA1J,KAAAL,IAAA,EACAuK,KAAAvK,KAAAuK,KAAAlK,KAAAL,IAAA,CACA,CACA,ECpXAF,IAAAsL,kBAAA,WAmIA,OAhIApL,KAAAqL,SAAAnJ,OAAA,sBAAA,EACAlC,KAAAsL,cAAApJ,OAAA,qCAAA,EACAlC,KAAAuL,KAAArJ,OAAA,2BAAA,EAEAlC,KAAAwL,QAEAxL,KAAA2G,QAAA,GACA3G,KAAAyL,QAAA,EAEAzL,KAAA0C,MAEA1C,KAAA0L,aAAA,SAAAC,GACAA,EAAAtI,KAAA,MAAArD,KAAA2G,QAAA3G,KAAAyL,SAAAG,GAAA,EAEA5L,KAAAsL,cAAAO,KAAA7L,KAAAyL,QAAA,CAAA,EACAvJ,OAAA,mCAAAlC,KAAAyL,QAAA,GAAA,EACA3G,SAAA,qCAAA,CACA,EAGA9E,KAAA8L,YAAA,SAAAC,GAQA,IAOAC,EAdAD,GAAA/L,KAAA2G,QAAA5E,OACAgK,EAAA,EAEAA,EAAA,IACAA,EAAA/L,KAAA2G,QAAA5E,OAAA,GAGAgK,IAAA/L,KAAAyL,UAIAzL,KAAAyL,QAAAM,EAEAE,EAAA/J,OAAA,qCAAA,EACA8J,EAAA9J,OAAA,6BAAA,EAAAgJ,IAAAe,CAAA,EAEA/J,OAAA,sCAAA,EAAAkB,YAAA,qCAAA,EACApD,KAAA0L,aAAAM,CAAA,EAEAA,EAAAlH,SAAA,oCAAA,EACAmH,EAAA7I,YAAA,oCAAA,EACA,EACApD,KAAAoJ,KAAA,WACApJ,KAAA8L,YAAA9L,KAAAyL,QAAA,CAAA,CACA,EACAzL,KAAAkM,SAAA,WACAlM,KAAA8L,YAAA9L,KAAAyL,QAAA,CAAA,CACA,EAEAzL,KAAAmM,WAAA,SAAApI,GAEA/D,KADAkC,OAAA6B,EAAAE,MAAA,EAAAZ,KAAA,gBAAA,GACA,CACA,EAEArD,KAAAoM,cAAA,SAAArI,GACAsI,EAAAnK,OAAA6B,EAAAE,MAAA,EAAAZ,KAAA,eAAA,EACAgJ,EAAAvM,IAAAsH,OAAAiF,CAAA,EACArM,KAAA8L,YAAAO,CAAA,CACA,EAEArM,KAAAsM,QAAA,WACAtM,KAAAqL,SAAAjI,YAAA,8BAAA,EACApD,KAAA0C,MAAAQ,MAAA,EACAlD,KAAAwL,QAAA,IACA,EAEAxL,KAAAkD,MAAA,WACAlD,KAAAqL,SAAAjI,YAAA,2BAAA,EAAA0B,SAAA,8BAAA,EAEA9E,KAAAwL,QAAAe,WAAAvM,KAAAsM,QAAAjM,KAAAL,IAAA,EAAA,GAAA,EAEAkC,OAAA,6BAAA,EAAA2I,IAAA,QAAA7K,KAAAkD,KAAA,CACA,EAEAlD,KAAAwM,aAAA,SAAAzI,GACAA,EAAA0I,gBAAA,EACAzM,KAAAkD,MAAA,CACA,EAGAlD,KAAA6E,KAAA,SAAA6H,EAAAC,GACAC,aAAA5M,KAAAwL,OAAA,EAEAxL,KAAA2G,QAAAzE,OAAAwK,CAAA,EACAG,QAAAF,CAAA,EACA9I,KAAA,sBAAA,EAGA,IAAAiJ,EAAA9M,KAAA2G,QAAA5E,OAIA6E,GAFA1E,OAAA,mCAAA,EAAA2J,KAAAiB,CAAA,EAEA5K,OAAA,+BAAA,GAIA,GAHA0E,EAAAiF,KAAA,EAAA,EAGA,EAAAiB,EAAA,CAEA,IAAA,IAAA9K,EAAA,EAAAA,EAAA8K,EAAA9K,CAAA,GAEAhC,KAAA2G,QAAA3E,KAAA0K,IACA1M,KAAAyL,QAAAzJ,GAIAlC,IAAAiN,iBAAA,SAAAnG,EAAA,CACAoG,MAAA,8BACAC,gBAAAjL,CACA,CAAA,EAGAhC,KAAAuL,KAAAJ,KAAA,CACA,MAEAnL,KAAAuL,KAAAN,KAAA,EAGAjL,KAAA0L,aAAAxJ,OAAA,qCAAA,CAAA,EACAlC,KAAA0C,MAAA,IAAA5C,IAAA4C,MAAA1C,KAAAqL,QAAA,EACArL,KAAA0C,MAAAmC,KAAA,EACA7E,KAAAqL,SAAAvG,SAAA,2BAAA,EAEA9E,KAAAuL,KAAAtG,GAAA,QAAAjF,KAAAmM,WAAA9L,KAAAL,IAAA,CAAA,EACAkC,OAAA,8BAAA,EAAA+C,GAAA,QAAAjF,KAAAoM,cAAA/L,KAAAL,IAAA,CAAA,EACAkC,OAAA,6BAAA,EAAA+C,GAAA,QAAAjF,KAAAwM,aAAAnM,KAAAL,IAAA,CAAA,CACA,EAEA,CACA6E,KAAA7E,KAAA6E,KAAAxE,KAAAL,IAAA,EACAoJ,KAAApJ,KAAAoJ,KAAA/I,KAAAL,IAAA,EACAkM,SAAAlM,KAAAkM,SAAA7L,KAAAL,IAAA,EACAkD,MAAAlD,KAAAkD,MAAA7C,KAAAL,IAAA,CACA,CACA,EC5IAF,IAAAoN,KAAA,KAGA,IAAAC,EAAA,IAAAC,KAAAC,eAAA,UAAA,CACAC,MAAA,OACAC,KAAA,SACA,CAAA,EAYA,MAAA,CACAC,kBAVA,SAAAC,GACA,IACAC,EAIA,OALAD,EAAAC,OACAA,EAAA,IAAAC,KAAAF,EAAAC,IAAA,EACAD,EAAAC,KAAAP,EAAAS,OAAAF,CAAA,GAGAD,CACA,CAIA,CACA,GAAA,ECrBA,IAAA,WAGA,IAAAI,EAAA7N,KAEAA,KAAAmC,IAAA,IAAA2L,IAAA5G,OAAA6G,QAAA,EAEA/N,KAAA4C,MAAAV,OAAA,MAAA,EAEAlC,KAAAgO,aAAA9L,OAAA,kBAAA,EAEAlC,KAAAiO,SAAA/L,OAAA,oBAAA,EACAlC,KAAAkO,kBAAAhM,OAAA,8BAAA,EACAlC,KAAAmO,OAAAjM,OAAA,kBAAA,EACAlC,KAAAoO,UAAAlM,OAAA,kBAAA,EACAlC,KAAAqO,YAAAnM,OAAA,uBAAA,EAEAlC,KAAAsO,cAAA,oBAEAtO,KAAA2C,OAAAT,OAAAlC,KAAAsO,aAAA,EACAtO,KAAA0C,MAAA,IAAA5C,IAAA4C,MAAA1C,KAAA2C,MAAA,EACA3C,KAAAuO,sBAAAvO,KAAA2C,OAAAkB,KAAA,qBAAA,EACA7D,KAAAwO,eAAA,IAAA1O,IAAAoF,UAAA,CACAO,SAAA,8BACA,CAAA,EAEAzF,KAAAyO,KAAA3O,IAAAsH,OAAAlF,OAAA,UAAA,EAAAwM,IAAA,EAAA,CAAA,EAEA1O,KAAA2O,gBAAAzM,OAAA,mBAAA,EAAA2J,KAAA,EACA7L,KAAA4O,cAAA1M,OAAA,iBAAA,EAAA2J,KAAA,EACA7L,KAAA6O,eAAA3M,OAAA,wBAAA,EAAA2J,KAAA,EAEA7L,KAAA6N,SAAA,GAEA7N,KAAA8O,YAAA,SAAAlN,GACA5B,KAAAmO,OAAAtC,KAAAjK,CAAA,EAAAuJ,KAAA,EACAnL,KAAAqO,YAAAxC,KAAA,EAAA,EAAAZ,KAAA,EACAjL,KAAAoO,UAAAnD,KAAA,EACAjL,KAAAiO,SAAAhD,KAAA,CACA,EAEAjL,KAAA+O,qBAAA,SAAAN,EAAA/H,EAAAsI,GACA,IAAA7M,EAAA,IAAA2L,IAAA5G,OAAA6G,QAAA,EAQAkB,GANA,EAAAR,EACAtM,EAAA+M,aAAAC,IAAA,OAAAV,CAAA,EAEAtM,EAAA+M,aAAAE,OAAA,MAAA,EAGA,CAAA,qBAIAC,GAHAL,GACAC,EAAAK,KAAA,0BAAA,EAEAxP,IAAAyP,cAAA,IAAA,CACAvC,MAAAiC,EAAAO,KAAA,GAAA,EACA3D,KAAA4C,EACAgB,KAAAtN,EAAAuN,SAAA,CACA,CAAA,GAEA5P,IAAAiN,iBAAA,KAAArG,EAAA,CACAsG,MAAA,mBACA2C,KAAAN,CACA,CAAA,CACA,EAGArP,KAAA4P,iBAAA,SAAAC,GACA,GAAAA,EAAA/P,IAAA+N,SAAAiC,QAAA,CAIA,IAHA,IAAAC,EAAA/P,KAAAyO,KAEAuB,EAAA9F,KAAA+F,KAAAJ,EAAA/P,IAAA+N,SAAAiC,OAAA,EACArB,EAAA,EAAAA,GAAAuB,EAAAvB,CAAA,GAEAzO,KAAA+O,qBAAAN,EAAAzO,KAAAqO,YADAI,IAAAsB,CACA,EAGA/P,KAAAqO,YAAA5G,IAAA,UAAA,cAAA,CACA,CACA,EAEAzH,KAAAkQ,kBAAA,SAAAzC,EAAA0C,GACA,IAAAC,EAAAlO,OAAAiO,CAAA,EAAAtM,KAAA,gBAAA,EACA,GAAAuM,EAAArO,OAKA,IADA,IAAAsO,EAAA5C,EAAA4C,KACArO,EAAA,EAAAA,EAAAqO,EAAAtO,OAAAC,CAAA,GAAA,CACA,IAAAsO,EAAAD,EAAArO,GAAAuO,KAAA,EAEA,KAAAD,GAIAxQ,IAAAiN,iBAAA,OAAAqD,EAAA,CACAvE,KAAAyE,EACAtD,MAAA,cACA,CAAA,CACA,CACA,EAEAhN,KAAAwQ,mBAAA,SAAA/C,EAAA0C,GACA,IASAM,EATAC,EAAAxO,OAAAiO,CAAA,EAAAtM,KAAA,iBAAA,EAEA4J,EAAAtL,KAAAsL,EAAAkD,cAAAlD,EAAAmD,aAOAH,EAAA,CACAxM,OAAA,SACA4M,IAAA,WACA5B,QAAA,CAAA,gBACA,GAEAjC,MAAAyD,EAAAxB,QAAAO,KAAA,GAAA,EACA,OAAAiB,EAAAxB,QAEAxB,EAAAtL,MACAsO,EAAAhB,KAAAhC,EAAAtL,IACAsO,EAAAK,MAAA,WAAArD,EAAAsD,KACAN,EAAAd,KAAA,oCACA7P,IAAAiN,iBAAA,IAAA2D,EAAAD,CAAA,GAGAhD,EAAAkD,eACAF,EAAAhB,KAAAhC,EAAAkD,aACAF,EAAAK,MAAA,oBAAArD,EAAAsD,KACAN,EAAAd,KAAA,wCACA7P,IAAAiN,iBAAA,IAAA2D,EAAAD,CAAA,GAGAhD,EAAAmD,aACAH,EAAAhB,KAAAhC,EAAAmD,WACAH,EAAAK,MAAA,WAAArD,EAAAsD,KAAA,kBACAN,EAAAd,KAAA,sCACA7P,IAAAiN,iBAAA,IAAA2D,EAAAD,CAAA,IAjCAN,IAAAnQ,KAAAsO,eACAoC,EAAAM,OAAA,CAkCA,EAEAhR,KAAAiR,oBAAA,SAAAxD,EAAA0C,GACA,GAAA1C,EAAAyD,QAAAzD,EAAAyD,OAAAnP,OAUA,IANA,IAAAyE,EAAAtE,OAAAiO,CAAA,EAAAtM,KAAA,aAAA,EACAsN,EAAA3K,EAAA3C,KAAA,qBAAA,EACAuN,EAAA5K,EAAA3C,KAAA,sBAAA,EAGAqN,EAAAzD,EAAAyD,OACAlP,EAAA,EAAAA,EAAAkP,EAAAnP,OAAAC,CAAA,GACA,GAAA,GAAAlB,eAAAC,KAAAmQ,EAAAlP,CAAA,EAAA,CAIA,IAIA7B,EAEAO,EANAkO,EAAA,IAAA9O,IAAAQ,SAAAN,KAAA4O,aAAA,EACAC,EAAA,IAAA/O,IAAAQ,SAAAN,KAAA6O,cAAA,EAEAwC,EAAAH,EAAAlP,GACA,IAAA7B,KAAAkR,EACA,CAAA,GAAAvQ,eAAAC,KAAAsQ,EAAAlR,CAAA,IACAO,EAAA2Q,EAAAlR,GACAyO,EAAAnO,QAAAN,EAAAO,CAAA,EACAmO,EAAApO,QAAAN,EAAAO,CAAA,GAIAkO,EAAAzN,SAAAgQ,CAAA,EACAtC,EAAA1N,SAAAiQ,CAAA,CAfA,CAiBA,EAEApR,KAAAsR,cAAA,SAAA7D,GACA,IAAA8D,EAAA,YAAA9D,EAAA+D,GACAtP,OAAAqP,CAAA,EAAAxP,SAIA0L,EAAA3N,IAAAoN,IAAAM,kBAAAC,CAAA,EAEAzN,KAAA6N,SAAAJ,EAAA+D,IAAA/D,EAEA,IAAA3N,IAAAQ,SAAAN,KAAA2O,gBAAAlB,CAAA,EAAAtM,SAAAnB,KAAAoO,SAAA,EAEApO,KAAAiR,oBAAAxD,EAAA8D,CAAA,EACAvR,KAAAwQ,mBAAA/C,EAAA8D,CAAA,EACA,EAGAvR,KAAAyR,YAAA,SAAAjQ,GACAxB,KAAAmO,OAAAtC,KAAA,EAAA,EAAAZ,KAAA,EACAjL,KAAAoO,UAAAvC,KAAA,EAAA,EAAAV,KAAA,EACAnL,KAAAqO,YAAAxC,KAAA,EAAA,EAAAZ,KAAA,EACAjL,KAAAiO,SAAAhD,KAAA,EAGAnL,IAAAwB,KAAAO,kBACAL,EACAxB,KAAAsR,cAAAjR,KAAAL,IAAA,EACAA,KAAA8O,YAAAzO,KAAAL,IAAA,EACA,oBACA,EAEAA,KAAA4P,iBAAA9P,IAAAsH,OAAA5F,EAAAkQ,YAAA,CAAA,EAEA,IAAAC,EAAA3R,KAAAkO,kBAAA7K,KAAA,aAAA,EAIAsO,GADAA,GAAAA,EADAA,EAAAlR,QAAA,WAAAe,EAAAkQ,aAAA,EAAA,IAAA1R,KAAAyO,KAAA,GAAA3O,IAAA+N,SAAAiC,OAAA,GACArP,QAAA,SAAAT,KAAAyO,KAAA,GAAA3O,IAAA+N,SAAAiC,QAAAtO,EAAAP,KAAAc,MAAA,GACAtB,QAAA,UAAAe,EAAAkQ,YAAA,EAEA1R,KAAAkO,kBAAAyB,KAAAgC,CAAA,CACA,EAEA3R,KAAA4R,YAAA,WACA,IAAAC,EAAA,CACAC,QAAA,GACArD,KAAAzO,KAAAyO,KACAsD,MAAAjS,IAAA+N,SAAAiC,OACA,EAEA9P,KAAAgO,aAAAU,IAAA,IACAmD,EAAAC,QAAAE,QAAAhS,KAAAgO,aAAAU,IAAA,GAGA5O,IAAAwB,KAAAW,QAAA,CACAG,OAAA,MACAD,IAAArC,IAAA+N,SAAAoE,YAAA,aACAhR,KAAA4Q,EACArP,UAAAxC,KAAAyR,YAAApR,KAAAL,IAAA,EACAyC,QAAAzC,KAAA8O,YAAAzO,KAAAL,IAAA,CACA,CAAA,CACA,EAEAA,KAAAkS,iBAAA,SAAAnO,GACA,IAAAoO,EAAAjQ,OAAA6B,EAAAE,MAAA,EAAAZ,KAAA,iBAAA,EACAoK,EAAAzN,KAAA6N,SAAAsE,GACAxP,EAAA3C,KAAA2C,OAEAA,EAAAkB,KAAA,4EAAA,EAAAgI,KAAA,EAAA,EAEAlJ,EAAAkB,KAAA,iBAAA,EAAAgI,KAAA4B,EAAAsD,IAAA,EACApO,EAAAkB,KAAA,gBAAA,EAAAgI,KAAA4B,EAAAC,IAAA,EACA/K,EAAAkB,KAAA,uBAAA,EAAA8L,KAAAlC,EAAA2E,gBAAA,EACAzP,EAAAkB,KAAA,gBAAA,EAAAgI,KAAA4B,EAAA9M,IAAA,EAEAX,KAAAkQ,kBAAAzC,EAAAzN,KAAAsO,aAAA,EACAtO,KAAAwQ,mBAAA/C,EAAAzN,KAAAsO,aAAA,EACAtO,KAAAiR,oBAAAxD,EAAAzN,KAAAsO,aAAA,EAEAtO,KAAA0C,MAAAmC,KAAA,EAEA7E,KAAAwO,eAAA5D,MAAA,CACA,EAEA5K,KAAAqS,oBAAA,WACArS,KAAAwO,eAAAjE,KAAA,EACAvK,KAAAuO,sBAAA9G,IAAA,CACA6K,MAAA,GACAlK,KAAA,EACA,CAAA,CACA,EAEApI,KAAAuS,kBAAA,WACA,EAAAvS,KAAAyO,KACAzO,KAAAmC,IAAA+M,aAAAC,IAAA,OAAAnP,KAAAyO,IAAA,EAEAZ,EAAA1L,IAAA+M,aAAAE,OAAA,MAAA,EAGA,IAAAoD,EAAA,CACA/D,KAAAzO,KAAAyO,KACA9N,KAAAX,KAAAgO,aAAAU,IAAA,CACA,EAEA+D,QAAAC,UAAAF,EAAAtL,OAAA4J,MAAA9Q,KAAAmC,IAAAuN,SAAA,CAAA,EAEA,aAAA,OAAAiD,KACAA,GAAA,MAAA,OAAAxQ,GAAA,EACAwQ,GAAA,OAAA,UAAA,EAEA,EAEA3S,KAAA4S,iBAAA,WACA9S,IAAA+S,SAAA7S,KAAAoO,UAAA,EAAA,CACA,EAEApO,KAAA8S,cAAA,WACA9S,KAAAgO,aAAA/I,GAAA,SAAA,SAAAlB,GACA8J,EAAAY,KAAA,EAEAvM,OAAAlC,IAAA,EAAA0O,IAAA,EACAb,EAAA1L,IAAA+M,aAAAC,IAAA,OAAAjN,OAAAlC,IAAA,EAAA6D,KAAA,iBAAA,EAAAR,KAAA,cAAA,CAAA,EAEAwK,EAAA1L,IAAA+M,aAAAE,OAAA,MAAA,EAGAvB,EAAA0E,kBAAA,EACA1E,EAAA+D,YAAA,CACA,CAAA,EAEA5R,KAAAoO,UAAAnJ,GAAA,QAAA,sBAAAjF,KAAAkS,iBAAA7R,KAAAL,IAAA,CAAA,EAEAA,KAAA2C,OAAAsC,GAAA,SAAAjF,KAAAqS,oBAAAhS,KAAAL,IAAA,CAAA,EAEAA,KAAAqO,YAAApJ,GAAA,QAAA,oBAAA,SAAAlB,GACAA,EAAAQ,eAAA,EACAR,EAAA0I,gBAAA,EAEAgC,EAAAvM,OAAA6B,EAAAE,MAAA,EAAA4H,KAAA,EACA4C,EAAA3O,IAAAsH,OAAAqH,EAAA,CAAA,EAEAZ,EAAAY,OAAAA,IAIAZ,EAAAY,KAAAA,EACAZ,EAAA+E,iBAAA,EACA/E,EAAA0E,kBAAA,EACA1E,EAAA+D,YAAA,EACA,CAAA,EAEA1K,OAAAmD,iBAAA,WAAA,SAAAtG,GACA,IAAAyO,EAAAzO,EAAAyO,OAAA,GAEA/D,EAAA+D,EAAA/D,MAAA,EACA9N,EAAA6R,EAAA7R,MAAA,GAEAkN,EAAAY,KAAA3O,IAAAsH,OAAAqH,EAAA,CAAA,EACAZ,EAAAG,aAAAU,IAAA/N,CAAA,EAEAkN,EAAA+E,iBAAA,EAEA/E,EAAA+D,YAAA,CACA,CAAA,CACA,EAEA5R,KAAA+S,KAAA,WACA/S,KAAA8S,cAAA,EAEA9S,KAAAyR,YAAA3R,IAAA+N,SAAAmF,WAAA,EAEAhT,KAAA4C,MAAAqC,GAAA,QAAA,uBAAA,SAAAlB,IACA,IAAAjE,IAAAsL,mBACAvG,KAAAd,EAAAE,OAAA,4BAAA,CACA,CAAA,CACA,EAEA/B,OAAAgF,MAAA,EAAAjC,GAAA,iBAAAjF,KAAA+S,KAAA1S,KAAAL,IAAA,CAAA,CACA","file":"../portfolio.js","sourcesContent":["var JPI = JPI || {};\n\n;// Handles all the general JS templating stuff - for use out of Template class as well\nJPI.templating = new (function() {\n    \"use strict\";\n\n    this.moustaches = {};\n\n    // Get a ReEx of a 'moustache' for the field to replace (e.g. `{{ fieldName }}` or `{{fieldName}}`)\n    this.getMoustache = function(field) {\n        if (!this.moustaches[field]) {\n            this.moustaches[field] = new RegExp(\"{{2} ?\" + field + \" ?}{2}\", \"g\");\n        }\n\n        return this.moustaches[field];\n    };\n\n    return {\n        getMoustache: this.getMoustache.bind(this),\n    };\n})();\n\n// A Template 'class' that holds all necessary logic to load a template, replace/process with data and render\nJPI.Template = (function() {\n    \"use strict\";\n\n    return function(template, context) {\n        this.context = context || {};\n\n        this.replace = function(field, value) {\n            var type = typeof value;\n\n            if (type === \"string\" || type === \"number\") {\n                var moustache = JPI.templating.getMoustache(field);\n                template = template.replace(moustache, value);\n            }\n            else if (type === \"object\") {\n                for (var innerField in value) {\n                    if ({}.hasOwnProperty.call(value, innerField)) {\n                        var innerKey = field ? field + \".\" + innerField : innerField;\n                        template = this.replace(innerKey, value[innerField]);\n                    }\n                }\n            }\n\n            return template;\n        };\n\n        this.process = function(data) {\n            if (data) {\n                this.replace(null, data);\n            }\n        };\n\n        this.get = function() {\n            this.process(context);\n            return template;\n        };\n\n        this.renderIn = function(parentElem) {\n            parentElem.append(this.get());\n        };\n    };\n})();\n\n;JPI.ajax = new (function() {\n    \"use strict\";\n\n    // Display feedback from server if there is one otherwise output generic message\n    this.checkAndRenderError = function(response, errorRenderer, genericMessage) {\n        var message = genericMessage || \"\";\n        if (response) {\n            if (response.error) {\n                message = response.error;\n            }\n            else if (response.message) {\n                message = response.message;\n            }\n        }\n\n        if (message) {\n            errorRenderer(message);\n        }\n    };\n\n    // Loop through data to see if it exists and if it does run a function on each row\n    this.renderRowsOrError = function(response, rowRenderer, errorRenderer, genericMessage) {\n        // If data/rows exists, For each row run a function\n        if (response && response.data && response.data.length) {\n            for (var i = 0; i < response.data.length; i++) {\n                if ({}.hasOwnProperty.call(response.data, i)) {\n                    rowRenderer(response.data[i]);\n                }\n            }\n\n            return true;\n        }\n\n        // Otherwise check feedback and show user and return false as data isn't there\n        this.checkAndRenderError(response, errorRenderer, genericMessage);\n        return false;\n    };\n\n    /**\n     * Function for sending XHR requests\n     *\n     * @param request Object of necessary data needed to do a HTTP request\n     * {\n     *     \"method\": HTTP Method (string),\n     *     \"url\": URL to load (string),\n     *     \"data\": object of payload,\n     *     \"onSuccess\": function to run when XHR request is successful\n     *     \"onError\": function to run when there's an error\n     * }\n     */\n    this.request = function(request) {\n        return jQuery.ajax({\n            url: request.url,\n            method: request.method.toUpperCase(),\n            data: request.data,\n            dataType: \"json\",\n            success: request.onSuccess,\n            error: function() {\n                request.onError(\"Error Loading Content.\");\n            },\n        });\n    };\n\n    return {\n        renderRowsOrError: this.renderRowsOrError.bind(this),\n        request: this.request.bind(this),\n    };\n})();\n\n;JPI.modal = function($modal) {\n    \"use strict\";\n\n    this.$body = jQuery(\"body\");\n    this.$page = jQuery(\".page-container\");\n\n    this.lastFocused = null;\n\n    this.$focusables = null;\n    this.$firstFocusable = null;\n    this.$lastFocusable = null;\n\n    this.close = function() {\n        if (!$modal.hasClass(\"is-open\")) {\n            return;\n        }\n\n        this.$body.removeClass(\"no-scroll\");\n        this.$page.attr(\"aria-hidden\", \"false\");\n\n        $modal.removeClass(\"is-open\");\n        $modal.attr({\n            \"tabindex\": -1,\n            \"aria-hidden\": true,\n            \"hidden\": \"hidden\",\n        });\n\n        if (this.lastFocused) {\n            this.lastFocused.focus();\n        }\n\n        $modal.trigger(\"closed\");\n    };\n\n    this.triggerClose = function() {\n        var $closeButton = $modal.find(\".js-modal-close\");\n        if ($closeButton.length) {\n            $closeButton.trigger(\"click\");\n            return;\n        }\n\n        this.close();\n    };\n\n    this.onModalClick = function(e) {\n        // Close if clicked outside of the modal content elem\n        var $clickedElem = jQuery(e.target);\n        if ($clickedElem.children(\".modal__content\").length && !$clickedElem.closest(\".modal__content\").length) {\n            this.triggerClose();\n        }\n    };\n\n    this.onBackwardTab = function(e) {\n        if (document.activeElement === this.$firstFocusable[0]) {\n            e.preventDefault();\n            this.$lastFocusable.focus();\n        }\n    };\n\n    this.onForwardTab = function(e) {\n        if (document.activeElement === this.$lastFocusable[0]) {\n            e.preventDefault();\n            this.$firstFocusable.focus();\n        }\n    };\n\n    this.onKeyDown = function(e) {\n        switch (e.keyCode || e.key) {\n            case 9:\n            case \"Tab\":\n                if (this.$focusables.length <= 1) {\n                    e.preventDefault();\n                    break;\n                }\n\n                if (e.shiftKey) {\n                    this.onBackwardTab(e);\n                }\n                else {\n                    this.onForwardTab(e);\n                }\n                break;\n            case 27:\n            case \"Escape\":\n                this.triggerClose();\n                break;\n        }\n    };\n\n    this.open = function() {\n        this.lastFocused = document.activeElement;\n\n        this.$body.addClass(\"no-scroll\");\n        this.$page.attr(\"aria-hidden\", \"true\");\n\n        $modal.attr({\n            \"tabindex\": 0,\n            \"aria-hidden\": false,\n            \"hidden\": false,\n        });\n        $modal.addClass(\"is-open\");\n\n        this.$focusables = JPI.getFocusableChildren($modal);\n        var focusablesLength = this.$focusables.length;\n        if (focusablesLength) {\n            this.$firstFocusable = jQuery(this.$focusables[0]);\n            this.$lastFocusable = jQuery(this.$focusables[focusablesLength - 1]);\n\n            this.$firstFocusable.focus();\n        }\n        else {\n            $modal.focus();\n        }\n\n        $modal.trigger(\"opened\");\n\n        $modal.on(\"click\", this.onModalClick.bind(this));\n        $modal.on(\"click\", \".js-modal-close\", this.close.bind(this));\n        $modal.on(\"keydown\", this.onKeyDown.bind(this));\n    };\n\n    return {\n        open: this.open.bind(this),\n        close: this.close.bind(this),\n    };\n};\n\n;/**\n * Holds all functions needed for a project slide show\n */\nJPI.SlideShow = function(options) {\n    \"use strict\";\n\n    var slideShow = this;\n\n    var defaults = {\n        selector: \".slide-show\",\n        viewportSelector: \".slide-show__viewport\",\n        slidesContainerSelector: \".slide-show__slides\",\n        slideSelector: \".slide-show__slide\",\n        bulletsSelector: \".slide-show__bullets\",\n        bulletSelector: \".slide-show__bullet\",\n        navSelector: \".slide-show__nav\",\n\n        slidesPerView: 1,\n\n        durationPerSlide: 5000, // Milliseconds\n\n        autoplay: true,\n\n        loop: true,\n    };\n\n    this.getXPosition = function(e) {\n        return e.changedTouches ? e.changedTouches[0].clientX : e.clientX;\n    };\n\n    this.removeSelector = function(selector) {\n        return selector.substring(1);\n    };\n\n    this.options = jQuery.extend(defaults, options || {});\n\n    this.options.activeSlideClass = this.removeSelector(this.options.slideSelector) + \"--active\";\n    if (this.options.bulletSelector) {\n        this.options.activeBulletClass = this.removeSelector(this.options.bulletSelector) + \"--active\";\n    }\n\n    this.$slideShow;\n    this.$viewport;\n    this.$container;\n    this.$slides;\n    this.$bulletsContainer;\n    this.$bullets;\n    this.$navs;\n\n    this.interval;\n\n    this.getConfig = function(config) {\n        if (window.innerWidth >= JPI.getInt(JPI.breakpoints.desktop)) {\n            if (\n                this.options.breakpoints &&\n                this.options.breakpoints.desktop &&\n                this.options.breakpoints.desktop[config]\n            ) {\n                return this.options.breakpoints.desktop[config];\n            }\n        }\n\n        if (window.innerWidth >= JPI.getInt(JPI.breakpoints.tablet)) {\n            if (\n                this.options.breakpoints &&\n                this.options.breakpoints.tablet &&\n                this.options.breakpoints.tablet[config]\n            ) {\n                return this.options.breakpoints.tablet[config];\n            }\n        }\n\n        return this.options[config];\n    };\n\n    // Resets the transition duration of a slide show\n    this.resetTransition = function() {\n        this.$container.css(\"transition-duration\", \"\");\n    };\n\n    // Widens slide show to fit all slides\n    this.widenSlideShow = function() {\n        var slideWidth = this.$viewport.innerWidth();\n        var count = this.$slides.length;\n\n        var fullWidth = slideWidth * count;\n\n        var slidesPerView = this.getConfig(\"slidesPerView\");\n        if (slidesPerView > 1) {\n            slideWidth = slideWidth / slidesPerView;\n\n            if (slidesPerView % 2 === 0) {\n                fullWidth = slideWidth * count + slideWidth / 2;\n                var offset = slideWidth / 2;\n            }\n            else {\n                fullWidth = slideWidth * count + slideWidth;\n                var offset = slideWidth;\n            }\n\n            this.$slides.first().css(\"margin-left\", offset);\n        }\n\n        this.$slides.css(\"width\", slideWidth + \"px\");\n        this.$container.css(\"width\", fullWidth + \"px\");\n    };\n\n    this.getPosition = function($slide) {\n        var offset = 0;\n\n        var slidesPerView = this.getConfig(\"slidesPerView\");\n        if (slidesPerView > 1 && !$slide.is(\":first-child\")) {\n            offset = $slide.innerWidth();\n\n            if (slidesPerView % 2 === 0) {\n                offset = offset / 2;\n            }\n        }\n\n        var position = $slide.position();\n\n        return \"-\" + (position.left - offset) + \"px\";\n    };\n\n    // Moves current slide to correct position\n    this.resetToCurrentSlide = function() {\n        var $activeSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n        this.$container.css({\n            transitionDuration: \"0s\",\n            left: this.getPosition($activeSlide),\n        });\n\n        this.resetTransition();\n    };\n\n    // Adjusts all slides in slide show to fit\n    this.repositionSlides = function() {\n        this.widenSlideShow();\n        this.resetToCurrentSlide();\n    };\n\n    this.setupNav = function() {\n        if (this.$navs && !this.options.loop) {\n            var $currentSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n            this.$navs.filter(\"[data-direction='previous']\").attr(\"disabled\", $currentSlide.is(\":first-child\"));\n            this.$navs.filter(\"[data-direction='next']\").attr(\"disabled\", $currentSlide.is(\":last-child\"));\n        }\n    };\n\n    this.moveToSlide = function($nextSlide) {\n        var $currentSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n\n        $currentSlide.removeClass(this.options.activeSlideClass);\n\n        if (this.$bullets) {\n            this.$bullets.filter(\".\" + this.options.activeBulletClass).removeClass(this.options.activeBulletClass);\n        }\n        $nextSlide.addClass(this.options.activeSlideClass);\n\n        this.$container.css(\"left\", this.getPosition($nextSlide));\n\n        if (this.$bullets) {\n            var newSlideID = $nextSlide.attr(\"id\");\n            this.$bullets.filter(\"[data-slide-id='#\" + newSlideID + \"']\").addClass(this.options.activeBulletClass);\n        }\n\n        this.setupNav();\n\n        JPI.getFocusableChildren($currentSlide).attr(\"tabindex\", -1);\n        JPI.getFocusableChildren($nextSlide).attr(\"tabindex\", \"\");\n    };\n\n    // Moves to next or previous slide\n    this.move = function(direction) {\n        var $oldSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n\n        var $nextSlide;\n        if (direction === \"previous\") {\n            $nextSlide = $oldSlide.prev();\n            if (!$nextSlide.length && this.options.loop) {\n                $nextSlide = this.$slides.last();\n            }\n        }\n        else {\n            $nextSlide = $oldSlide.next();\n            if (!$nextSlide.length && this.options.loop) {\n                $nextSlide = this.$slides.first();\n            }\n        }\n\n        if ($nextSlide.length) {\n            this.moveToSlide($nextSlide);\n        }\n        else {\n            this.resetToCurrentSlide();\n        }\n    };\n\n    // Sets up events when the user wants to change slides with drag control\n    this.onSlideDrag = function(startEvent) {\n        var dragMove, dragEnd;\n\n        var container = this.$container[0];\n        var slidesContainerLeft = this.$container.position().left;\n\n        var startX = this.getXPosition(startEvent);\n\n        var removeListeners = function() {\n            container.removeEventListener(\"touchmove\", dragMove);\n            container.removeEventListener(\"mousemove\", dragMove);\n            container.removeEventListener(\"touchend\", dragEnd);\n            container.removeEventListener(\"mouseup\", dragEnd);\n            container.removeEventListener(\"mouseleave\", dragEnd);\n        };\n        var dragCancel = function() {\n            slideShow.resetToCurrentSlide();\n            if (slideShow.options.autoplay) {\n                slideShow.resume();\n            }\n            removeListeners();\n        };\n        dragMove = function(e) {\n            var endX = slideShow.getXPosition(e);\n            var diff = startX - endX;\n\n            slideShow.$container.css({\n                transitionDuration: \"0s\",\n                left: slidesContainerLeft - diff + \"px\",\n            });\n        };\n        dragEnd = function(e) {\n            var endX = slideShow.getXPosition(e);\n\n            var diff = startX - endX;\n            if (Math.abs(diff) >= 15) {\n                slideShow.resetTransition();\n                slideShow.move(diff < 0 ? \"previous\" : \"next\");\n                if (slideShow.options.autoplay) {\n                    slideShow.resume();\n                }\n                removeListeners();\n                return;\n            }\n\n            dragCancel();\n        };\n\n        this.pause();\n        container.addEventListener(\"touchmove\", dragMove);\n        container.addEventListener(\"mousemove\", dragMove);\n        container.addEventListener(\"touchend\", dragEnd);\n        container.addEventListener(\"mouseup\", dragEnd);\n        container.addEventListener(\"mouseleave\", dragEnd);\n    };\n\n    // Pause a slide show by clearing the interval function on slide show id\n    this.pause = function() {\n        clearInterval(this.interval);\n    };\n\n    this.stop = function() {\n        var container = this.$container[0];\n        container.removeEventListener(\"mousedown\", this.onSlideDrag);\n        container.removeEventListener(\"touchstart\", this.onSlideDrag);\n\n        clearInterval(this.interval);\n    };\n\n    // Resumes a slide show by slide show element id\n    this.resume = function() {\n        this.interval = setInterval(function() {\n            slideShow.move(\"next\");\n        }, this.options.durationPerSlide);\n    };\n\n    // Function when bullet was clicked to change slide show to a particular slide\n    this.changeToSlide = function(e) {\n        var $bullet = jQuery(e.target);\n        var clickedSlideId = $bullet.attr(\"data-slide-id\");\n        var $nextSlide = this.$slideShow.find(clickedSlideId);\n\n        this.pause();\n        this.moveToSlide($nextSlide);\n\n        if (this.options.autoplay) {\n            this.resume();\n        }\n    };\n\n    this.navigate = function(e) {\n        this.pause();\n        this.move(jQuery(e.target).attr(\"data-direction\"));\n\n        if (this.options.autoplay) {\n            this.resume();\n        }\n    };\n\n    this.start = function() {\n        if (this.$bullets) {\n            this.$bullets.off(\"click\", this.changeToSlide);\n        }\n        if (this.$navs) {\n            this.$navs.off(\"click\", this.navigate);\n        }\n\n        this.$slideShow = jQuery(this.options.selector);\n        this.$viewport = this.$slideShow.find(this.options.viewportSelector);\n        this.$container = this.$slideShow.find(this.options.slidesContainerSelector);\n        this.$slides = this.$slideShow.find(this.options.slideSelector);\n\n        if (this.options.bulletsSelector && this.options.bulletSelector) {\n            this.$bulletsContainer = this.$slideShow.find(this.options.bulletsSelector);\n            this.$bullets = this.$slideShow.find(this.options.bulletSelector);\n            this.$bullets.on(\"click\", this.changeToSlide.bind(this));\n        }\n\n        this.$navs = this.$slideShow.find(this.options.navSelector);\n        if (this.$navs) {\n            this.$navs.on(\"click\", this.navigate.bind(this));\n        }\n\n        jQuery(window).on(\"orientationchange resize\", JPI.debounce(this.repositionSlides.bind(this), 150));\n\n        var count = this.$slides.length;\n\n        if (count <= 0) {\n            if (this.$bulletsContainer) {\n                this.$bulletsContainer.hide();\n            }\n            if (this.$navs) {\n                this.$navs.hide();\n            }\n\n            return;\n        }\n\n        var $firstSlide = this.$slides.first();\n\n        var $inactiveSlides = this.$slides.not($firstSlide);\n\n        JPI.getFocusableChildren($inactiveSlides).attr(\"tabindex\", -1);\n\n        $firstSlide.addClass(this.options.activeSlideClass);\n\n        if (this.$bullets) {\n            this.$bullets.first().addClass(this.options.activeBulletClass);\n        }\n\n        if (count > 1) {\n            this.widenSlideShow();\n\n            if (this.$bulletsContainer) {\n                this.$bulletsContainer.show();\n            }\n            if (this.$navs) {\n                this.$navs.show();\n                this.setupNav();\n            }\n\n            this.$container[0].addEventListener(\"mousedown\", this.onSlideDrag.bind(this));\n            this.$container[0].addEventListener(\"touchstart\", this.onSlideDrag.bind(this));\n\n            if (this.options.autoplay) {\n                this.resume();\n            }\n        }\n    };\n\n    return {\n        start: this.start.bind(this),\n        pause: this.pause.bind(this),\n        resume: this.resume.bind(this),\n        stop: this.stop.bind(this),\n    };\n};\n\n;/**\n * Used to expand a projects slide show\n */\nJPI.ExpandedSlideShow = function() {\n    \"use strict\";\n\n    this.$element = jQuery(\".expanded-slide-show\");\n    this.$currentCount = jQuery(\".expanded-slide-show__current-count\");\n    this.$nav = jQuery(\".expanded-slide-show__nav\");\n\n    this.timeout;\n\n    this.$slides = {};\n    this.current = 0;\n\n    this.modal;\n\n    this.displaySlide = function($expandedImage) {\n        $expandedImage.attr(\"src\", this.$slides[this.current].src);\n\n        this.$currentCount.text(this.current + 1);\n        var $currentBullet = jQuery(\".expanded-slide-show__bullet:eq(\" + this.current + \")\");\n        $currentBullet.addClass(\"expanded-slide-show__bullet--active\");\n    };\n\n    // Changes the current slide to new slide\n    this.changeSlide = function(newSlideIndex) {\n        if (newSlideIndex >= this.$slides.length) {\n            newSlideIndex = 0;\n        }\n        else if (newSlideIndex < 0) {\n            newSlideIndex = this.$slides.length - 1;\n        }\n\n        if (newSlideIndex === this.current) {\n            return;\n        }\n\n        this.current = newSlideIndex;\n\n        var $expandedImageOld = jQuery(\".expanded-slide-show__image--active\");\n        var $expandedImageNew = jQuery(\".expanded-slide-show__image\").not($expandedImageOld);\n\n        jQuery(\".expanded-slide-show__bullet--active\").removeClass(\"expanded-slide-show__bullet--active\");\n        this.displaySlide($expandedImageNew);\n\n        $expandedImageNew.addClass(\"expanded-slide-show__image--active\");\n        $expandedImageOld.removeClass(\"expanded-slide-show__image--active\");\n    };\n    this.next = function() {\n        this.changeSlide(this.current + 1);\n    };\n    this.previous = function() {\n        this.changeSlide(this.current - 1);\n    };\n\n    this.onNavClick = function(e) {\n        var direction = jQuery(e.target).attr(\"data-direction\");\n        this[direction]();\n    };\n\n    this.onBulletClick = function(e) {\n        var slideId = jQuery(e.target).attr(\"data-slide-id\");\n        slideId = JPI.getInt(slideId);\n        this.changeSlide(slideId);\n    };\n\n    this.onClose = function() {\n        this.$element.removeClass(\"expanded-slide-show--closing\");\n        this.modal.close();\n        this.timeout = null;\n    };\n\n    this.close = function() {\n        this.$element.removeClass(\"expanded-slide-show--open\").addClass(\"expanded-slide-show--closing\");\n\n        this.timeout = setTimeout(this.onClose.bind(this), 990);\n\n        jQuery(\".expanded-slide-show__close\").off(\"click\", this.close);\n    };\n\n    this.onCloseClick = function(e) {\n        e.stopPropagation();\n        this.close();\n    };\n\n    // Sets up slide show when image is clicked on\n    this.open = function(slide, groupSelector) {\n        clearTimeout(this.timeout);\n\n        this.$slides = jQuery(slide)\n            .parents(groupSelector)\n            .find(\".js-expandable-image\")\n        ;\n\n        var slidesCount = this.$slides.length;\n\n        jQuery(\".expanded-slide-show__total-count\").text(slidesCount);\n\n        var $bulletsContainer = jQuery(\".expanded-slide-show__bullets\");\n        $bulletsContainer.text(\"\");\n\n        // Only show navigations if there are more than one slide show image to slide through\n        if (slidesCount > 1) {\n            // Loops through all slide shows images and set up a bullet navigation for each\n            for (var i = 0; i < slidesCount; i++) {\n                // Checks if the current loop is the current image on slideShow\n                if (this.$slides[i] === slide) {\n                    this.current = i;\n                }\n\n                // Set up bullet navigation for slide\n                JPI.renderNewElement(\"button\", $bulletsContainer, {\n                    \"class\": \"expanded-slide-show__bullet\",\n                    \"data-slide-id\": i,\n                });\n            }\n\n            this.$nav.show();\n        }\n        else {\n            this.$nav.hide();\n        }\n\n        this.displaySlide(jQuery(\".expanded-slide-show__image--active\"));\n        this.modal = new JPI.modal(this.$element);\n        this.modal.open();\n        this.$element.addClass(\"expanded-slide-show--open\");\n\n        this.$nav.on(\"click\", this.onNavClick.bind(this));\n        jQuery(\".expanded-slide-show__bullet\").on(\"click\", this.onBulletClick.bind(this));\n        jQuery(\".expanded-slide-show__close\").on(\"click\", this.onCloseClick.bind(this));\n    };\n\n    return {\n        open: this.open.bind(this),\n        next: this.next.bind(this),\n        previous: this.previous.bind(this),\n        close: this.close.bind(this),\n    };\n};\n\n;JPI.api = (function() {\n    \"use strict\";\n\n    var dateFormat = new Intl.DateTimeFormat(\"default\", {\n        month: \"long\",\n        year: \"numeric\",\n    });\n\n    // Helper function to format Project data from the API to the necessary format for the Website\n    var formatProjectData = function(project) {\n        if (project.date) {\n            var date = new Date(project.date);\n            project.date = dateFormat.format(date);\n        }\n\n        return project;\n    };\n\n    return {\n        formatProjectData: formatProjectData,\n    };\n})();\n\n;new (function() {\n    \"use strict\";\n\n    var projects = this;\n\n    this.url = new URL(window.location);\n\n    this.$body = jQuery(\"body\");\n\n    this.$projectType = jQuery(\".js-project-type\");\n\n    this.$loading = jQuery(\".projects__loading\");\n    this.$paginationStatus = jQuery(\".projects__pagination-status\");\n    this.$error = jQuery(\".projects__error\");\n    this.$projects = jQuery(\".projects__items\");\n    this.$pagination = jQuery(\".projects__pagination\");\n\n    this.modalSelector = \".detailed-project\";\n\n    this.$modal = jQuery(this.modalSelector);\n    this.modal = new JPI.modal(this.$modal);\n    this.$modalSlidesContainer = this.$modal.find(\".slide-show__slides\");\n    this.modalSlideShow = new JPI.SlideShow({\n        selector: \"#detailed-project-slide-show\",\n    });\n\n    this.page = JPI.getInt(jQuery(\".js-page\").val(), 1);\n\n    this.projectTemplate = jQuery(\"#project-template\").text();\n    this.slideTemplate = jQuery(\"#slide-template\").text();\n    this.bulletTemplate = jQuery(\"#slide-bullet-template\").text();\n\n    this.projects = {};\n\n    this.renderError = function(error) {\n        this.$error.text(error).show();\n        this.$pagination.text(\"\").hide();\n        this.$projects.hide();\n        this.$loading.hide();\n    };\n\n    this.renderPaginationItem = function(page, $container, isCurrent) {\n        var url = new URL(window.location);\n\n        if (page > 1) {\n            url.searchParams.set(\"page\", page);\n        } else {\n            url.searchParams.delete(\"page\");\n        }\n\n        var classes = [\"pagination__link\"];\n        if (isCurrent) {\n            classes.push(\"pagination__link--active\");\n        }\n        var $link = JPI.createElement(\"a\", {\n            class: classes.join(\" \"),\n            text: page,\n            href: url.toString(),\n        });\n\n        JPI.renderNewElement(\"li\", $container, {\n            class: \"pagination__item\",\n            html: $link,\n        });\n    };\n\n    // Adds pagination buttons/elements to the page\n    this.renderPagination = function(totalProjects) {\n        if (totalProjects > JPI.projects.perPage) {\n            var currentPage = this.page;\n\n            var totalPages = Math.ceil(totalProjects / JPI.projects.perPage);\n            for (var page = 1; page <= totalPages; page++) {\n                var isCurrent = page === currentPage;\n                this.renderPaginationItem(page, this.$pagination, isCurrent);\n            }\n\n            this.$pagination.css(\"display\", \"inline-block\");\n        }\n    };\n\n    this.renderProjectTags = function(project, containerSelector) {\n        var $tags = jQuery(containerSelector).find(\".project__tags\");\n        if (!$tags.length) {\n            return;\n        }\n\n        var tags = project.tags;\n        for (var i = 0; i < tags.length; i++) {\n            var tag = tags[i].trim();\n\n            if (tag === \"\") {\n                continue;\n            }\n\n            JPI.renderNewElement(\"span\", $tags, {\n                text: tag,\n                class: \"project__tag\",\n            });\n        }\n    };\n\n    this.renderProjectLinks = function(project, containerSelector) {\n        var $links = jQuery(containerSelector).find(\".project__links\");\n\n        if (!project.url && !project.download_url && !project.github_url) {\n            if (containerSelector !== this.modalSelector) {\n                $links.remove();\n            }\n            return;\n        }\n\n        var defaultAttributes = {\n            target: \"_blank\",\n            rel: \"noopener\",\n            classes: [\"project__link\"],\n        };\n\n        defaultAttributes.class = defaultAttributes.classes.join(\" \");\n        delete defaultAttributes.classes;\n\n        if (project.url) {\n            defaultAttributes.href = project.url;\n            defaultAttributes.title = \"Link to \" + project.name;\n            defaultAttributes.html = \"<i class='fas fa-link fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n\n        if (project.download_url) {\n            defaultAttributes.href = project.download_url;\n            defaultAttributes.title = \"Link to download \" + project.name;\n            defaultAttributes.html = \"<i class='fas fa-download fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n\n        if (project.github_url) {\n            defaultAttributes.href = project.github_url;\n            defaultAttributes.title = \"Link to \" + project.name + \" code on GitHub\";\n            defaultAttributes.html = \"<i class='fab fa-github fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n    };\n\n    this.renderProjectImages = function(project, containerSelector) {\n        if (!project.images || !project.images.length) {\n            return;\n        }\n\n        var $slideShow = jQuery(containerSelector).find(\".slide-show\");\n        var $slidesContainer = $slideShow.find(\".slide-show__slides\");\n        var $slideShowBullets = $slideShow.find(\".slide-show__bullets\");\n\n        // Loop through each image in project\n        var images = project.images;\n        for (var i = 0; i < images.length; i++) {\n            if (!{}.hasOwnProperty.call(images, i)) {\n                continue;\n            }\n\n            var slideTemplate = new JPI.Template(this.slideTemplate);\n            var bulletTemplate = new JPI.Template(this.bulletTemplate);\n\n            var image = images[i];\n            for (var field in image) {\n                if ({}.hasOwnProperty.call(image, field)) {\n                    var value = image[field];\n                    slideTemplate.replace(field, value);\n                    bulletTemplate.replace(field, value);\n                }\n            }\n\n            slideTemplate.renderIn($slidesContainer);\n            bulletTemplate.renderIn($slideShowBullets);\n        }\n    };\n\n    this.renderProject = function(project) {\n        var projectSelector = \"#project-\" + project.id;\n        if (jQuery(projectSelector).length) {\n            return;\n        }\n\n        project = JPI.api.formatProjectData(project);\n\n        this.projects[project.id] = project;\n\n        new JPI.Template(this.projectTemplate, project).renderIn(this.$projects);\n\n        this.renderProjectImages(project, projectSelector);\n        this.renderProjectLinks(project, projectSelector);\n    };\n\n    // Sets up events when projects were received\n    this.gotProjects = function(response) {\n        this.$error.text(\"\").hide();\n        this.$projects.text(\"\").show();\n        this.$pagination.text(\"\").hide();\n        this.$loading.hide();\n\n        // Send the data, the function to do if data is valid\n        JPI.ajax.renderRowsOrError(\n            response,\n            this.renderProject.bind(this),\n            this.renderError.bind(this),\n            \"No Projects Found.\"\n        );\n\n        this.renderPagination(JPI.getInt(response._total_count));\n\n        var paginationStatus = this.$paginationStatus.attr(\"data-format\");\n\n        paginationStatus = paginationStatus.replace(\"{start}\", (response._total_count ? 1 : 0) + (this.page - 1) * JPI.projects.perPage);\n        paginationStatus = paginationStatus.replace(\"{end}\", (this.page - 1) * JPI.projects.perPage + response.data.length);\n        paginationStatus = paginationStatus.replace(\"{total}\", response._total_count);\n\n        this.$paginationStatus.html(paginationStatus);\n    };\n\n    this.getProjects = function() {\n        var query = {\n            filters: {},\n            page: this.page,\n            limit: JPI.projects.perPage,\n        };\n\n        if (this.$projectType.val()) {\n            query.filters.type_id = this.$projectType.val();\n        }\n\n        JPI.ajax.request({\n            method: \"GET\",\n            url: JPI.projects.apiEndpoint + \"/projects/\",\n            data: query,\n            onSuccess: this.gotProjects.bind(this),\n            onError: this.renderError.bind(this),\n        });\n    };\n\n    this.openProjectModal = function(e) {\n        var projectId = jQuery(e.target).attr(\"data-project-id\");\n        var project = this.projects[projectId];\n        var $modal = this.$modal;\n\n        $modal.find(\".project__links, .project__tags, .slide-show__slides, .slide-show__bullets\").text(\"\");\n\n        $modal.find(\".modal__heading\").text(project.name);\n        $modal.find(\".project__date\").text(project.date);\n        $modal.find(\".project__description\").html(project.long_description);\n        $modal.find(\".project__type\").text(project.type);\n\n        this.renderProjectTags(project, this.modalSelector);\n        this.renderProjectLinks(project, this.modalSelector);\n        this.renderProjectImages(project, this.modalSelector);\n\n        this.modal.open();\n\n        this.modalSlideShow.start();\n    };\n\n    this.onProjectModalClose = function() {\n        this.modalSlideShow.stop();\n        this.$modalSlidesContainer.css({\n            width: \"\",\n            left: \"\",\n        });\n    };\n\n    this.storeLatestSearch = function() {\n        if (this.page > 1) {\n            this.url.searchParams.set(\"page\", this.page);\n        } else {\n            projects.url.searchParams.delete(\"page\");\n        }\n\n        var state = {\n            page: this.page,\n            type: this.$projectType.val(),\n        };\n\n        history.pushState(state, window.title, this.url.toString());\n\n        if (typeof ga !== \"undefined\") {\n            ga(\"set\", \"page\", url);\n            ga(\"send\", \"pageview\");\n        }\n    };\n\n    this.scrollToProjects = function() {\n        JPI.scrollTo(this.$projects, 20);\n    };\n\n    this.initListeners = function() {\n        this.$projectType.on(\"change\", function(e) {\n            projects.page = 1;\n\n            if (jQuery(this).val()) {\n                projects.url.searchParams.set(\"type\", jQuery(this).find(\"option:selected\").attr(\"data-urlname\"));\n            } else {\n                projects.url.searchParams.delete(\"type\");\n            }\n\n            projects.storeLatestSearch();\n            projects.getProjects();\n        });\n\n        this.$projects.on(\"click\", \".project__read-more\", this.openProjectModal.bind(this));\n\n        this.$modal.on(\"closed\", this.onProjectModalClose.bind(this));\n\n        this.$pagination.on(\"click\", \".pagination__link\", function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            var page = jQuery(e.target).text();\n            page = JPI.getInt(page, 1);\n\n            if (projects.page === page) {\n                return;\n            }\n\n            projects.page = page;\n            projects.scrollToProjects();\n            projects.storeLatestSearch();\n            projects.getProjects();\n        });\n\n        window.addEventListener(\"popstate\", function(e) {\n            var state = e.state || {};\n\n            var page = state.page || 1;\n            var type = state.type || \"\";\n\n            projects.page = JPI.getInt(page, 1);\n            projects.$projectType.val(type);\n\n            projects.scrollToProjects();\n\n            projects.getProjects();\n        });\n    };\n\n    this.init = function() {\n        this.initListeners();\n\n        this.gotProjects(JPI.projects.apiResponse);\n\n        this.$body.on(\"click\", \".js-expandable-image\", function(e) {\n            var expandedSlideShow = new JPI.ExpandedSlideShow();\n            expandedSlideShow.open(e.target, \".js-expandable-image-group\");\n        });\n    };\n\n    jQuery(window).on(\"jpi-css-loaded\", this.init.bind(this));\n})();\n\n",";// Handles all the general JS templating stuff - for use out of Template class as well\nJPI.templating = new (function() {\n    \"use strict\";\n\n    this.moustaches = {};\n\n    // Get a ReEx of a 'moustache' for the field to replace (e.g. `{{ fieldName }}` or `{{fieldName}}`)\n    this.getMoustache = function(field) {\n        if (!this.moustaches[field]) {\n            this.moustaches[field] = new RegExp(\"{{2} ?\" + field + \" ?}{2}\", \"g\");\n        }\n\n        return this.moustaches[field];\n    };\n\n    return {\n        getMoustache: this.getMoustache.bind(this),\n    };\n})();\n\n// A Template 'class' that holds all necessary logic to load a template, replace/process with data and render\nJPI.Template = (function() {\n    \"use strict\";\n\n    return function(template, context) {\n        this.context = context || {};\n\n        this.replace = function(field, value) {\n            var type = typeof value;\n\n            if (type === \"string\" || type === \"number\") {\n                var moustache = JPI.templating.getMoustache(field);\n                template = template.replace(moustache, value);\n            }\n            else if (type === \"object\") {\n                for (var innerField in value) {\n                    if ({}.hasOwnProperty.call(value, innerField)) {\n                        var innerKey = field ? field + \".\" + innerField : innerField;\n                        template = this.replace(innerKey, value[innerField]);\n                    }\n                }\n            }\n\n            return template;\n        };\n\n        this.process = function(data) {\n            if (data) {\n                this.replace(null, data);\n            }\n        };\n\n        this.get = function() {\n            this.process(context);\n            return template;\n        };\n\n        this.renderIn = function(parentElem) {\n            parentElem.append(this.get());\n        };\n    };\n})();\n",";JPI.ajax = new (function() {\n    \"use strict\";\n\n    // Display feedback from server if there is one otherwise output generic message\n    this.checkAndRenderError = function(response, errorRenderer, genericMessage) {\n        var message = genericMessage || \"\";\n        if (response) {\n            if (response.error) {\n                message = response.error;\n            }\n            else if (response.message) {\n                message = response.message;\n            }\n        }\n\n        if (message) {\n            errorRenderer(message);\n        }\n    };\n\n    // Loop through data to see if it exists and if it does run a function on each row\n    this.renderRowsOrError = function(response, rowRenderer, errorRenderer, genericMessage) {\n        // If data/rows exists, For each row run a function\n        if (response && response.data && response.data.length) {\n            for (var i = 0; i < response.data.length; i++) {\n                if ({}.hasOwnProperty.call(response.data, i)) {\n                    rowRenderer(response.data[i]);\n                }\n            }\n\n            return true;\n        }\n\n        // Otherwise check feedback and show user and return false as data isn't there\n        this.checkAndRenderError(response, errorRenderer, genericMessage);\n        return false;\n    };\n\n    /**\n     * Function for sending XHR requests\n     *\n     * @param request Object of necessary data needed to do a HTTP request\n     * {\n     *     \"method\": HTTP Method (string),\n     *     \"url\": URL to load (string),\n     *     \"data\": object of payload,\n     *     \"onSuccess\": function to run when XHR request is successful\n     *     \"onError\": function to run when there's an error\n     * }\n     */\n    this.request = function(request) {\n        return jQuery.ajax({\n            url: request.url,\n            method: request.method.toUpperCase(),\n            data: request.data,\n            dataType: \"json\",\n            success: request.onSuccess,\n            error: function() {\n                request.onError(\"Error Loading Content.\");\n            },\n        });\n    };\n\n    return {\n        renderRowsOrError: this.renderRowsOrError.bind(this),\n        request: this.request.bind(this),\n    };\n})();\n",";JPI.modal = function($modal) {\n    \"use strict\";\n\n    this.$body = jQuery(\"body\");\n    this.$page = jQuery(\".page-container\");\n\n    this.lastFocused = null;\n\n    this.$focusables = null;\n    this.$firstFocusable = null;\n    this.$lastFocusable = null;\n\n    this.close = function() {\n        if (!$modal.hasClass(\"is-open\")) {\n            return;\n        }\n\n        this.$body.removeClass(\"no-scroll\");\n        this.$page.attr(\"aria-hidden\", \"false\");\n\n        $modal.removeClass(\"is-open\");\n        $modal.attr({\n            \"tabindex\": -1,\n            \"aria-hidden\": true,\n            \"hidden\": \"hidden\",\n        });\n\n        if (this.lastFocused) {\n            this.lastFocused.focus();\n        }\n\n        $modal.trigger(\"closed\");\n    };\n\n    this.triggerClose = function() {\n        var $closeButton = $modal.find(\".js-modal-close\");\n        if ($closeButton.length) {\n            $closeButton.trigger(\"click\");\n            return;\n        }\n\n        this.close();\n    };\n\n    this.onModalClick = function(e) {\n        // Close if clicked outside of the modal content elem\n        var $clickedElem = jQuery(e.target);\n        if ($clickedElem.children(\".modal__content\").length && !$clickedElem.closest(\".modal__content\").length) {\n            this.triggerClose();\n        }\n    };\n\n    this.onBackwardTab = function(e) {\n        if (document.activeElement === this.$firstFocusable[0]) {\n            e.preventDefault();\n            this.$lastFocusable.focus();\n        }\n    };\n\n    this.onForwardTab = function(e) {\n        if (document.activeElement === this.$lastFocusable[0]) {\n            e.preventDefault();\n            this.$firstFocusable.focus();\n        }\n    };\n\n    this.onKeyDown = function(e) {\n        switch (e.keyCode || e.key) {\n            case 9:\n            case \"Tab\":\n                if (this.$focusables.length <= 1) {\n                    e.preventDefault();\n                    break;\n                }\n\n                if (e.shiftKey) {\n                    this.onBackwardTab(e);\n                }\n                else {\n                    this.onForwardTab(e);\n                }\n                break;\n            case 27:\n            case \"Escape\":\n                this.triggerClose();\n                break;\n        }\n    };\n\n    this.open = function() {\n        this.lastFocused = document.activeElement;\n\n        this.$body.addClass(\"no-scroll\");\n        this.$page.attr(\"aria-hidden\", \"true\");\n\n        $modal.attr({\n            \"tabindex\": 0,\n            \"aria-hidden\": false,\n            \"hidden\": false,\n        });\n        $modal.addClass(\"is-open\");\n\n        this.$focusables = JPI.getFocusableChildren($modal);\n        var focusablesLength = this.$focusables.length;\n        if (focusablesLength) {\n            this.$firstFocusable = jQuery(this.$focusables[0]);\n            this.$lastFocusable = jQuery(this.$focusables[focusablesLength - 1]);\n\n            this.$firstFocusable.focus();\n        }\n        else {\n            $modal.focus();\n        }\n\n        $modal.trigger(\"opened\");\n\n        $modal.on(\"click\", this.onModalClick.bind(this));\n        $modal.on(\"click\", \".js-modal-close\", this.close.bind(this));\n        $modal.on(\"keydown\", this.onKeyDown.bind(this));\n    };\n\n    return {\n        open: this.open.bind(this),\n        close: this.close.bind(this),\n    };\n};\n",";/**\n * Holds all functions needed for a project slide show\n */\nJPI.SlideShow = function(options) {\n    \"use strict\";\n\n    var slideShow = this;\n\n    var defaults = {\n        selector: \".slide-show\",\n        viewportSelector: \".slide-show__viewport\",\n        slidesContainerSelector: \".slide-show__slides\",\n        slideSelector: \".slide-show__slide\",\n        bulletsSelector: \".slide-show__bullets\",\n        bulletSelector: \".slide-show__bullet\",\n        navSelector: \".slide-show__nav\",\n\n        slidesPerView: 1,\n\n        durationPerSlide: 5000, // Milliseconds\n\n        autoplay: true,\n\n        loop: true,\n    };\n\n    this.getXPosition = function(e) {\n        return e.changedTouches ? e.changedTouches[0].clientX : e.clientX;\n    };\n\n    this.removeSelector = function(selector) {\n        return selector.substring(1);\n    };\n\n    this.options = jQuery.extend(defaults, options || {});\n\n    this.options.activeSlideClass = this.removeSelector(this.options.slideSelector) + \"--active\";\n    if (this.options.bulletSelector) {\n        this.options.activeBulletClass = this.removeSelector(this.options.bulletSelector) + \"--active\";\n    }\n\n    this.$slideShow;\n    this.$viewport;\n    this.$container;\n    this.$slides;\n    this.$bulletsContainer;\n    this.$bullets;\n    this.$navs;\n\n    this.interval;\n\n    this.getConfig = function(config) {\n        if (window.innerWidth >= JPI.getInt(JPI.breakpoints.desktop)) {\n            if (\n                this.options.breakpoints &&\n                this.options.breakpoints.desktop &&\n                this.options.breakpoints.desktop[config]\n            ) {\n                return this.options.breakpoints.desktop[config];\n            }\n        }\n\n        if (window.innerWidth >= JPI.getInt(JPI.breakpoints.tablet)) {\n            if (\n                this.options.breakpoints &&\n                this.options.breakpoints.tablet &&\n                this.options.breakpoints.tablet[config]\n            ) {\n                return this.options.breakpoints.tablet[config];\n            }\n        }\n\n        return this.options[config];\n    };\n\n    // Resets the transition duration of a slide show\n    this.resetTransition = function() {\n        this.$container.css(\"transition-duration\", \"\");\n    };\n\n    // Widens slide show to fit all slides\n    this.widenSlideShow = function() {\n        var slideWidth = this.$viewport.innerWidth();\n        var count = this.$slides.length;\n\n        var fullWidth = slideWidth * count;\n\n        var slidesPerView = this.getConfig(\"slidesPerView\");\n        if (slidesPerView > 1) {\n            slideWidth = slideWidth / slidesPerView;\n\n            if (slidesPerView % 2 === 0) {\n                fullWidth = slideWidth * count + slideWidth / 2;\n                var offset = slideWidth / 2;\n            }\n            else {\n                fullWidth = slideWidth * count + slideWidth;\n                var offset = slideWidth;\n            }\n\n            this.$slides.first().css(\"margin-left\", offset);\n        }\n\n        this.$slides.css(\"width\", slideWidth + \"px\");\n        this.$container.css(\"width\", fullWidth + \"px\");\n    };\n\n    this.getPosition = function($slide) {\n        var offset = 0;\n\n        var slidesPerView = this.getConfig(\"slidesPerView\");\n        if (slidesPerView > 1 && !$slide.is(\":first-child\")) {\n            offset = $slide.innerWidth();\n\n            if (slidesPerView % 2 === 0) {\n                offset = offset / 2;\n            }\n        }\n\n        var position = $slide.position();\n\n        return \"-\" + (position.left - offset) + \"px\";\n    };\n\n    // Moves current slide to correct position\n    this.resetToCurrentSlide = function() {\n        var $activeSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n        this.$container.css({\n            transitionDuration: \"0s\",\n            left: this.getPosition($activeSlide),\n        });\n\n        this.resetTransition();\n    };\n\n    // Adjusts all slides in slide show to fit\n    this.repositionSlides = function() {\n        this.widenSlideShow();\n        this.resetToCurrentSlide();\n    };\n\n    this.setupNav = function() {\n        if (this.$navs && !this.options.loop) {\n            var $currentSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n            this.$navs.filter(\"[data-direction='previous']\").attr(\"disabled\", $currentSlide.is(\":first-child\"));\n            this.$navs.filter(\"[data-direction='next']\").attr(\"disabled\", $currentSlide.is(\":last-child\"));\n        }\n    };\n\n    this.moveToSlide = function($nextSlide) {\n        var $currentSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n\n        $currentSlide.removeClass(this.options.activeSlideClass);\n\n        if (this.$bullets) {\n            this.$bullets.filter(\".\" + this.options.activeBulletClass).removeClass(this.options.activeBulletClass);\n        }\n        $nextSlide.addClass(this.options.activeSlideClass);\n\n        this.$container.css(\"left\", this.getPosition($nextSlide));\n\n        if (this.$bullets) {\n            var newSlideID = $nextSlide.attr(\"id\");\n            this.$bullets.filter(\"[data-slide-id='#\" + newSlideID + \"']\").addClass(this.options.activeBulletClass);\n        }\n\n        this.setupNav();\n\n        JPI.getFocusableChildren($currentSlide).attr(\"tabindex\", -1);\n        JPI.getFocusableChildren($nextSlide).attr(\"tabindex\", \"\");\n    };\n\n    // Moves to next or previous slide\n    this.move = function(direction) {\n        var $oldSlide = this.$slideShow.find(\".\" + this.options.activeSlideClass);\n\n        var $nextSlide;\n        if (direction === \"previous\") {\n            $nextSlide = $oldSlide.prev();\n            if (!$nextSlide.length && this.options.loop) {\n                $nextSlide = this.$slides.last();\n            }\n        }\n        else {\n            $nextSlide = $oldSlide.next();\n            if (!$nextSlide.length && this.options.loop) {\n                $nextSlide = this.$slides.first();\n            }\n        }\n\n        if ($nextSlide.length) {\n            this.moveToSlide($nextSlide);\n        }\n        else {\n            this.resetToCurrentSlide();\n        }\n    };\n\n    // Sets up events when the user wants to change slides with drag control\n    this.onSlideDrag = function(startEvent) {\n        var dragMove, dragEnd;\n\n        var container = this.$container[0];\n        var slidesContainerLeft = this.$container.position().left;\n\n        var startX = this.getXPosition(startEvent);\n\n        var removeListeners = function() {\n            container.removeEventListener(\"touchmove\", dragMove);\n            container.removeEventListener(\"mousemove\", dragMove);\n            container.removeEventListener(\"touchend\", dragEnd);\n            container.removeEventListener(\"mouseup\", dragEnd);\n            container.removeEventListener(\"mouseleave\", dragEnd);\n        };\n        var dragCancel = function() {\n            slideShow.resetToCurrentSlide();\n            if (slideShow.options.autoplay) {\n                slideShow.resume();\n            }\n            removeListeners();\n        };\n        dragMove = function(e) {\n            var endX = slideShow.getXPosition(e);\n            var diff = startX - endX;\n\n            slideShow.$container.css({\n                transitionDuration: \"0s\",\n                left: slidesContainerLeft - diff + \"px\",\n            });\n        };\n        dragEnd = function(e) {\n            var endX = slideShow.getXPosition(e);\n\n            var diff = startX - endX;\n            if (Math.abs(diff) >= 15) {\n                slideShow.resetTransition();\n                slideShow.move(diff < 0 ? \"previous\" : \"next\");\n                if (slideShow.options.autoplay) {\n                    slideShow.resume();\n                }\n                removeListeners();\n                return;\n            }\n\n            dragCancel();\n        };\n\n        this.pause();\n        container.addEventListener(\"touchmove\", dragMove);\n        container.addEventListener(\"mousemove\", dragMove);\n        container.addEventListener(\"touchend\", dragEnd);\n        container.addEventListener(\"mouseup\", dragEnd);\n        container.addEventListener(\"mouseleave\", dragEnd);\n    };\n\n    // Pause a slide show by clearing the interval function on slide show id\n    this.pause = function() {\n        clearInterval(this.interval);\n    };\n\n    this.stop = function() {\n        var container = this.$container[0];\n        container.removeEventListener(\"mousedown\", this.onSlideDrag);\n        container.removeEventListener(\"touchstart\", this.onSlideDrag);\n\n        clearInterval(this.interval);\n    };\n\n    // Resumes a slide show by slide show element id\n    this.resume = function() {\n        this.interval = setInterval(function() {\n            slideShow.move(\"next\");\n        }, this.options.durationPerSlide);\n    };\n\n    // Function when bullet was clicked to change slide show to a particular slide\n    this.changeToSlide = function(e) {\n        var $bullet = jQuery(e.target);\n        var clickedSlideId = $bullet.attr(\"data-slide-id\");\n        var $nextSlide = this.$slideShow.find(clickedSlideId);\n\n        this.pause();\n        this.moveToSlide($nextSlide);\n\n        if (this.options.autoplay) {\n            this.resume();\n        }\n    };\n\n    this.navigate = function(e) {\n        this.pause();\n        this.move(jQuery(e.target).attr(\"data-direction\"));\n\n        if (this.options.autoplay) {\n            this.resume();\n        }\n    };\n\n    this.start = function() {\n        if (this.$bullets) {\n            this.$bullets.off(\"click\", this.changeToSlide);\n        }\n        if (this.$navs) {\n            this.$navs.off(\"click\", this.navigate);\n        }\n\n        this.$slideShow = jQuery(this.options.selector);\n        this.$viewport = this.$slideShow.find(this.options.viewportSelector);\n        this.$container = this.$slideShow.find(this.options.slidesContainerSelector);\n        this.$slides = this.$slideShow.find(this.options.slideSelector);\n\n        if (this.options.bulletsSelector && this.options.bulletSelector) {\n            this.$bulletsContainer = this.$slideShow.find(this.options.bulletsSelector);\n            this.$bullets = this.$slideShow.find(this.options.bulletSelector);\n            this.$bullets.on(\"click\", this.changeToSlide.bind(this));\n        }\n\n        this.$navs = this.$slideShow.find(this.options.navSelector);\n        if (this.$navs) {\n            this.$navs.on(\"click\", this.navigate.bind(this));\n        }\n\n        jQuery(window).on(\"orientationchange resize\", JPI.debounce(this.repositionSlides.bind(this), 150));\n\n        var count = this.$slides.length;\n\n        if (count <= 0) {\n            if (this.$bulletsContainer) {\n                this.$bulletsContainer.hide();\n            }\n            if (this.$navs) {\n                this.$navs.hide();\n            }\n\n            return;\n        }\n\n        var $firstSlide = this.$slides.first();\n\n        var $inactiveSlides = this.$slides.not($firstSlide);\n\n        JPI.getFocusableChildren($inactiveSlides).attr(\"tabindex\", -1);\n\n        $firstSlide.addClass(this.options.activeSlideClass);\n\n        if (this.$bullets) {\n            this.$bullets.first().addClass(this.options.activeBulletClass);\n        }\n\n        if (count > 1) {\n            this.widenSlideShow();\n\n            if (this.$bulletsContainer) {\n                this.$bulletsContainer.show();\n            }\n            if (this.$navs) {\n                this.$navs.show();\n                this.setupNav();\n            }\n\n            this.$container[0].addEventListener(\"mousedown\", this.onSlideDrag.bind(this));\n            this.$container[0].addEventListener(\"touchstart\", this.onSlideDrag.bind(this));\n\n            if (this.options.autoplay) {\n                this.resume();\n            }\n        }\n    };\n\n    return {\n        start: this.start.bind(this),\n        pause: this.pause.bind(this),\n        resume: this.resume.bind(this),\n        stop: this.stop.bind(this),\n    };\n};\n",";/**\n * Used to expand a projects slide show\n */\nJPI.ExpandedSlideShow = function() {\n    \"use strict\";\n\n    this.$element = jQuery(\".expanded-slide-show\");\n    this.$currentCount = jQuery(\".expanded-slide-show__current-count\");\n    this.$nav = jQuery(\".expanded-slide-show__nav\");\n\n    this.timeout;\n\n    this.$slides = {};\n    this.current = 0;\n\n    this.modal;\n\n    this.displaySlide = function($expandedImage) {\n        $expandedImage.attr(\"src\", this.$slides[this.current].src);\n\n        this.$currentCount.text(this.current + 1);\n        var $currentBullet = jQuery(\".expanded-slide-show__bullet:eq(\" + this.current + \")\");\n        $currentBullet.addClass(\"expanded-slide-show__bullet--active\");\n    };\n\n    // Changes the current slide to new slide\n    this.changeSlide = function(newSlideIndex) {\n        if (newSlideIndex >= this.$slides.length) {\n            newSlideIndex = 0;\n        }\n        else if (newSlideIndex < 0) {\n            newSlideIndex = this.$slides.length - 1;\n        }\n\n        if (newSlideIndex === this.current) {\n            return;\n        }\n\n        this.current = newSlideIndex;\n\n        var $expandedImageOld = jQuery(\".expanded-slide-show__image--active\");\n        var $expandedImageNew = jQuery(\".expanded-slide-show__image\").not($expandedImageOld);\n\n        jQuery(\".expanded-slide-show__bullet--active\").removeClass(\"expanded-slide-show__bullet--active\");\n        this.displaySlide($expandedImageNew);\n\n        $expandedImageNew.addClass(\"expanded-slide-show__image--active\");\n        $expandedImageOld.removeClass(\"expanded-slide-show__image--active\");\n    };\n    this.next = function() {\n        this.changeSlide(this.current + 1);\n    };\n    this.previous = function() {\n        this.changeSlide(this.current - 1);\n    };\n\n    this.onNavClick = function(e) {\n        var direction = jQuery(e.target).attr(\"data-direction\");\n        this[direction]();\n    };\n\n    this.onBulletClick = function(e) {\n        var slideId = jQuery(e.target).attr(\"data-slide-id\");\n        slideId = JPI.getInt(slideId);\n        this.changeSlide(slideId);\n    };\n\n    this.onClose = function() {\n        this.$element.removeClass(\"expanded-slide-show--closing\");\n        this.modal.close();\n        this.timeout = null;\n    };\n\n    this.close = function() {\n        this.$element.removeClass(\"expanded-slide-show--open\").addClass(\"expanded-slide-show--closing\");\n\n        this.timeout = setTimeout(this.onClose.bind(this), 990);\n\n        jQuery(\".expanded-slide-show__close\").off(\"click\", this.close);\n    };\n\n    this.onCloseClick = function(e) {\n        e.stopPropagation();\n        this.close();\n    };\n\n    // Sets up slide show when image is clicked on\n    this.open = function(slide, groupSelector) {\n        clearTimeout(this.timeout);\n\n        this.$slides = jQuery(slide)\n            .parents(groupSelector)\n            .find(\".js-expandable-image\")\n        ;\n\n        var slidesCount = this.$slides.length;\n\n        jQuery(\".expanded-slide-show__total-count\").text(slidesCount);\n\n        var $bulletsContainer = jQuery(\".expanded-slide-show__bullets\");\n        $bulletsContainer.text(\"\");\n\n        // Only show navigations if there are more than one slide show image to slide through\n        if (slidesCount > 1) {\n            // Loops through all slide shows images and set up a bullet navigation for each\n            for (var i = 0; i < slidesCount; i++) {\n                // Checks if the current loop is the current image on slideShow\n                if (this.$slides[i] === slide) {\n                    this.current = i;\n                }\n\n                // Set up bullet navigation for slide\n                JPI.renderNewElement(\"button\", $bulletsContainer, {\n                    \"class\": \"expanded-slide-show__bullet\",\n                    \"data-slide-id\": i,\n                });\n            }\n\n            this.$nav.show();\n        }\n        else {\n            this.$nav.hide();\n        }\n\n        this.displaySlide(jQuery(\".expanded-slide-show__image--active\"));\n        this.modal = new JPI.modal(this.$element);\n        this.modal.open();\n        this.$element.addClass(\"expanded-slide-show--open\");\n\n        this.$nav.on(\"click\", this.onNavClick.bind(this));\n        jQuery(\".expanded-slide-show__bullet\").on(\"click\", this.onBulletClick.bind(this));\n        jQuery(\".expanded-slide-show__close\").on(\"click\", this.onCloseClick.bind(this));\n    };\n\n    return {\n        open: this.open.bind(this),\n        next: this.next.bind(this),\n        previous: this.previous.bind(this),\n        close: this.close.bind(this),\n    };\n};\n",";JPI.api = (function() {\n    \"use strict\";\n\n    var dateFormat = new Intl.DateTimeFormat(\"default\", {\n        month: \"long\",\n        year: \"numeric\",\n    });\n\n    // Helper function to format Project data from the API to the necessary format for the Website\n    var formatProjectData = function(project) {\n        if (project.date) {\n            var date = new Date(project.date);\n            project.date = dateFormat.format(date);\n        }\n\n        return project;\n    };\n\n    return {\n        formatProjectData: formatProjectData,\n    };\n})();\n",";new (function() {\n    \"use strict\";\n\n    var projects = this;\n\n    this.url = new URL(window.location);\n\n    this.$body = jQuery(\"body\");\n\n    this.$projectType = jQuery(\".js-project-type\");\n\n    this.$loading = jQuery(\".projects__loading\");\n    this.$paginationStatus = jQuery(\".projects__pagination-status\");\n    this.$error = jQuery(\".projects__error\");\n    this.$projects = jQuery(\".projects__items\");\n    this.$pagination = jQuery(\".projects__pagination\");\n\n    this.modalSelector = \".detailed-project\";\n\n    this.$modal = jQuery(this.modalSelector);\n    this.modal = new JPI.modal(this.$modal);\n    this.$modalSlidesContainer = this.$modal.find(\".slide-show__slides\");\n    this.modalSlideShow = new JPI.SlideShow({\n        selector: \"#detailed-project-slide-show\",\n    });\n\n    this.page = JPI.getInt(jQuery(\".js-page\").val(), 1);\n\n    this.projectTemplate = jQuery(\"#project-template\").text();\n    this.slideTemplate = jQuery(\"#slide-template\").text();\n    this.bulletTemplate = jQuery(\"#slide-bullet-template\").text();\n\n    this.projects = {};\n\n    this.renderError = function(error) {\n        this.$error.text(error).show();\n        this.$pagination.text(\"\").hide();\n        this.$projects.hide();\n        this.$loading.hide();\n    };\n\n    this.renderPaginationItem = function(page, $container, isCurrent) {\n        var url = new URL(window.location);\n\n        if (page > 1) {\n            url.searchParams.set(\"page\", page);\n        } else {\n            url.searchParams.delete(\"page\");\n        }\n\n        var classes = [\"pagination__link\"];\n        if (isCurrent) {\n            classes.push(\"pagination__link--active\");\n        }\n        var $link = JPI.createElement(\"a\", {\n            class: classes.join(\" \"),\n            text: page,\n            href: url.toString(),\n        });\n\n        JPI.renderNewElement(\"li\", $container, {\n            class: \"pagination__item\",\n            html: $link,\n        });\n    };\n\n    // Adds pagination buttons/elements to the page\n    this.renderPagination = function(totalProjects) {\n        if (totalProjects > JPI.projects.perPage) {\n            var currentPage = this.page;\n\n            var totalPages = Math.ceil(totalProjects / JPI.projects.perPage);\n            for (var page = 1; page <= totalPages; page++) {\n                var isCurrent = page === currentPage;\n                this.renderPaginationItem(page, this.$pagination, isCurrent);\n            }\n\n            this.$pagination.css(\"display\", \"inline-block\");\n        }\n    };\n\n    this.renderProjectTags = function(project, containerSelector) {\n        var $tags = jQuery(containerSelector).find(\".project__tags\");\n        if (!$tags.length) {\n            return;\n        }\n\n        var tags = project.tags;\n        for (var i = 0; i < tags.length; i++) {\n            var tag = tags[i].trim();\n\n            if (tag === \"\") {\n                continue;\n            }\n\n            JPI.renderNewElement(\"span\", $tags, {\n                text: tag,\n                class: \"project__tag\",\n            });\n        }\n    };\n\n    this.renderProjectLinks = function(project, containerSelector) {\n        var $links = jQuery(containerSelector).find(\".project__links\");\n\n        if (!project.url && !project.download_url && !project.github_url) {\n            if (containerSelector !== this.modalSelector) {\n                $links.remove();\n            }\n            return;\n        }\n\n        var defaultAttributes = {\n            target: \"_blank\",\n            rel: \"noopener\",\n            classes: [\"project__link\"],\n        };\n\n        defaultAttributes.class = defaultAttributes.classes.join(\" \");\n        delete defaultAttributes.classes;\n\n        if (project.url) {\n            defaultAttributes.href = project.url;\n            defaultAttributes.title = \"Link to \" + project.name;\n            defaultAttributes.html = \"<i class='fas fa-link fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n\n        if (project.download_url) {\n            defaultAttributes.href = project.download_url;\n            defaultAttributes.title = \"Link to download \" + project.name;\n            defaultAttributes.html = \"<i class='fas fa-download fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n\n        if (project.github_url) {\n            defaultAttributes.href = project.github_url;\n            defaultAttributes.title = \"Link to \" + project.name + \" code on GitHub\";\n            defaultAttributes.html = \"<i class='fab fa-github fa-2x'></i>\";\n            JPI.renderNewElement(\"a\", $links, defaultAttributes);\n        }\n    };\n\n    this.renderProjectImages = function(project, containerSelector) {\n        if (!project.images || !project.images.length) {\n            return;\n        }\n\n        var $slideShow = jQuery(containerSelector).find(\".slide-show\");\n        var $slidesContainer = $slideShow.find(\".slide-show__slides\");\n        var $slideShowBullets = $slideShow.find(\".slide-show__bullets\");\n\n        // Loop through each image in project\n        var images = project.images;\n        for (var i = 0; i < images.length; i++) {\n            if (!{}.hasOwnProperty.call(images, i)) {\n                continue;\n            }\n\n            var slideTemplate = new JPI.Template(this.slideTemplate);\n            var bulletTemplate = new JPI.Template(this.bulletTemplate);\n\n            var image = images[i];\n            for (var field in image) {\n                if ({}.hasOwnProperty.call(image, field)) {\n                    var value = image[field];\n                    slideTemplate.replace(field, value);\n                    bulletTemplate.replace(field, value);\n                }\n            }\n\n            slideTemplate.renderIn($slidesContainer);\n            bulletTemplate.renderIn($slideShowBullets);\n        }\n    };\n\n    this.renderProject = function(project) {\n        var projectSelector = \"#project-\" + project.id;\n        if (jQuery(projectSelector).length) {\n            return;\n        }\n\n        project = JPI.api.formatProjectData(project);\n\n        this.projects[project.id] = project;\n\n        new JPI.Template(this.projectTemplate, project).renderIn(this.$projects);\n\n        this.renderProjectImages(project, projectSelector);\n        this.renderProjectLinks(project, projectSelector);\n    };\n\n    // Sets up events when projects were received\n    this.gotProjects = function(response) {\n        this.$error.text(\"\").hide();\n        this.$projects.text(\"\").show();\n        this.$pagination.text(\"\").hide();\n        this.$loading.hide();\n\n        // Send the data, the function to do if data is valid\n        JPI.ajax.renderRowsOrError(\n            response,\n            this.renderProject.bind(this),\n            this.renderError.bind(this),\n            \"No Projects Found.\"\n        );\n\n        this.renderPagination(JPI.getInt(response._total_count));\n\n        var paginationStatus = this.$paginationStatus.attr(\"data-format\");\n\n        paginationStatus = paginationStatus.replace(\"{start}\", (response._total_count ? 1 : 0) + (this.page - 1) * JPI.projects.perPage);\n        paginationStatus = paginationStatus.replace(\"{end}\", (this.page - 1) * JPI.projects.perPage + response.data.length);\n        paginationStatus = paginationStatus.replace(\"{total}\", response._total_count);\n\n        this.$paginationStatus.html(paginationStatus);\n    };\n\n    this.getProjects = function() {\n        var query = {\n            filters: {},\n            page: this.page,\n            limit: JPI.projects.perPage,\n        };\n\n        if (this.$projectType.val()) {\n            query.filters.type_id = this.$projectType.val();\n        }\n\n        JPI.ajax.request({\n            method: \"GET\",\n            url: JPI.projects.apiEndpoint + \"/projects/\",\n            data: query,\n            onSuccess: this.gotProjects.bind(this),\n            onError: this.renderError.bind(this),\n        });\n    };\n\n    this.openProjectModal = function(e) {\n        var projectId = jQuery(e.target).attr(\"data-project-id\");\n        var project = this.projects[projectId];\n        var $modal = this.$modal;\n\n        $modal.find(\".project__links, .project__tags, .slide-show__slides, .slide-show__bullets\").text(\"\");\n\n        $modal.find(\".modal__heading\").text(project.name);\n        $modal.find(\".project__date\").text(project.date);\n        $modal.find(\".project__description\").html(project.long_description);\n        $modal.find(\".project__type\").text(project.type);\n\n        this.renderProjectTags(project, this.modalSelector);\n        this.renderProjectLinks(project, this.modalSelector);\n        this.renderProjectImages(project, this.modalSelector);\n\n        this.modal.open();\n\n        this.modalSlideShow.start();\n    };\n\n    this.onProjectModalClose = function() {\n        this.modalSlideShow.stop();\n        this.$modalSlidesContainer.css({\n            width: \"\",\n            left: \"\",\n        });\n    };\n\n    this.storeLatestSearch = function() {\n        if (this.page > 1) {\n            this.url.searchParams.set(\"page\", this.page);\n        } else {\n            projects.url.searchParams.delete(\"page\");\n        }\n\n        var state = {\n            page: this.page,\n            type: this.$projectType.val(),\n        };\n\n        history.pushState(state, window.title, this.url.toString());\n\n        if (typeof ga !== \"undefined\") {\n            ga(\"set\", \"page\", url);\n            ga(\"send\", \"pageview\");\n        }\n    };\n\n    this.scrollToProjects = function() {\n        JPI.scrollTo(this.$projects, 20);\n    };\n\n    this.initListeners = function() {\n        this.$projectType.on(\"change\", function(e) {\n            projects.page = 1;\n\n            if (jQuery(this).val()) {\n                projects.url.searchParams.set(\"type\", jQuery(this).find(\"option:selected\").attr(\"data-urlname\"));\n            } else {\n                projects.url.searchParams.delete(\"type\");\n            }\n\n            projects.storeLatestSearch();\n            projects.getProjects();\n        });\n\n        this.$projects.on(\"click\", \".project__read-more\", this.openProjectModal.bind(this));\n\n        this.$modal.on(\"closed\", this.onProjectModalClose.bind(this));\n\n        this.$pagination.on(\"click\", \".pagination__link\", function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            var page = jQuery(e.target).text();\n            page = JPI.getInt(page, 1);\n\n            if (projects.page === page) {\n                return;\n            }\n\n            projects.page = page;\n            projects.scrollToProjects();\n            projects.storeLatestSearch();\n            projects.getProjects();\n        });\n\n        window.addEventListener(\"popstate\", function(e) {\n            var state = e.state || {};\n\n            var page = state.page || 1;\n            var type = state.type || \"\";\n\n            projects.page = JPI.getInt(page, 1);\n            projects.$projectType.val(type);\n\n            projects.scrollToProjects();\n\n            projects.getProjects();\n        });\n    };\n\n    this.init = function() {\n        this.initListeners();\n\n        this.gotProjects(JPI.projects.apiResponse);\n\n        this.$body.on(\"click\", \".js-expandable-image\", function(e) {\n            var expandedSlideShow = new JPI.ExpandedSlideShow();\n            expandedSlideShow.open(e.target, \".js-expandable-image-group\");\n        });\n    };\n\n    jQuery(window).on(\"jpi-css-loaded\", this.init.bind(this));\n})();\n"]}